{"version":3,"sources":["webpack:///./src/templates/sector.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./src/styles/SliderHomePage.js","webpack:///./src/components/SliderHomePage.js","webpack:///./src/components/MiniTeamSection.js"],"names":["SectorInfo","styled","div","SectorLabel","SectorTemplate","data","members","nodes","projects","title","markdownRemark","frontmatter","name","map","project","key","id","url","fields","slug","image","childImageSharp","fluid","text","boldText","className","style","marginBottom","width","display","overflow","events","event","index","dark","theme","link","module","exports","target","i","arguments","length","source","hasOwnProperty","call","Object","prototype","SliderHomePage","props","href","rel","MiniTeam","TeamGrid","MemberContainer","Link","Member","to","MiniTeamSection","member"],"mappings":"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","file":"component---src-templates-sector-js-fa830100d0413aebd8f3.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout/Layout';\nimport { TitleContainer, ProjectsContainer, ProjectsContent } from '../pages/work';\nimport SectorNav from '../components/SectorNav';\nimport MainGrid from '../styles/MainGrid';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport WorkHomePage from '../components/WorkHomePage';\nimport SliderHomePage from '../components/SliderHomePage';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\n\nconst SectorInfo = styled.div`\n  a {\n    display: inline-block;\n    color: #1eb0d3;\n    width: 200px;\n  }\n\n  @media (min-width: 1024px) {\n    a {\n      width: 200px;\n      font-size: 18px;\n      line-height: 27px;\n      margin-top: 20px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.div`\n  display: none;\n  @media (min-width: 1024px) {\n    display: block;\n    background-color: #fa7fe7;\n    width: max-content;\n    padding: 15px 26px;\n    font-size: 25px;\n    font-weight: 500;\n  }\n`;\n\nconst SectorTemplate = ({ data }) => {\n  const members = data.members.nodes;\n  const projects = data.projects.nodes;\n\n  return (\n    <Layout>\n      <Seo title={data.markdownRemark.frontmatter.name} />\n      <MainGrid>\n        <TitleContainer>\n          <HeroText>Our Work</HeroText>\n          <SectorInfo>\n            <SectorLabel>{data.markdownRemark.frontmatter.name}</SectorLabel>\n            {/* <a href=\"#\">View All {data.markdownRemark.frontmatter.name} Case Studies</a> */}\n          </SectorInfo>\n        </TitleContainer>\n        <ProjectsContent>\n          <SectorNav />\n          <ProjectsContainer>\n            {projects.map((project) => (\n              <ImageItem\n                key={project.id}\n                url={project.fields.slug}\n                image={project.frontmatter.image.childImageSharp.fluid}\n                text={project.frontmatter.name}\n                boldText\n              />\n            ))}\n          </ProjectsContainer>\n          <MiniTeamSection members={members} />\n        </ProjectsContent>\n      </MainGrid>\n      <div className=\"slider-wrapper\" style={{ marginBottom: 150, width: '100%', display: 'flex', overflow: 'auto' }}>\n        {data.markdownRemark.frontmatter.events?.map((event, index) => (\n          <SliderHomePage\n            key={event.title}\n            dark={index % 2 !== 0}\n            theme=\"true\"\n            project={event.project}\n            title={event.title}\n            link={event.url}\n          />\n        ))}\n      </div>\n      <WorkHomePage />\n    </Layout>\n  );\n};\n\nexport default SectorTemplate;\n\nexport const pageQuery = graphql`\n  query SectorQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        name\n        description\n        color\n        events {\n          url\n          title\n          type\n          project\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { sectors: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"project\" }, sector: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nconst SliderHomePage = styled.div`\n  background:${(props) => (props.dark === true ? 'black' : '#eaf0f8')};\n  width: 281px;\n  height: 125px;\n  padding-left:21px;\n  padding-top: 10px;\n  padding-right: 24px;\n  flex: 1;\n  margin-top: 40px;\n \n  .heading-scroll-section {\n    text-align: left;\n    font-size: 10px;\n    line-height: 12px;\n    letter-spacing: 0px;\n    color:${(props) => (props.dark === true ? 'white' : '#707070')};\n    opacity: 1;\n    display: flex;\n    text-transform: uppercase;\n  }\n  \n  .circle-scroll-section {\n    height: 24px;\n    width: 23px;\n    background-color:${(props) => (props.dark === true ? 'white' : 'black')} ;\n    border-radius: 50%;\n    display: flex;\n  }\n\n  .circle-container{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .line-scroll-section {\n    width: 32px;\n    height: 0px;\n    border: 5px solid;\n    border-color:${(props) => (props.dark === true ? '#DDF521' : '#707070')} ;\n    opacity: 1;\n    margin-left:0px;\n    margin-top: 0;\n    margin-bottom: 0;\n   \n  }\n  .content-scroll-section {\n    display: block;\n    text-align: left;\n    font-size: 20px;\n    line-height: 24px;\n    letter-spacing: 0px;\n    color: ${(props) => (props.dark === true ? 'white' : '#585050')} ;\n    opacity: 1;\n    margin-top: 10px;\n    width: 225px;\n  }\n\n  @media (min-width: 1024px) {\n    min-height: 220px;\n\n    .circle-container > div {\n      width: 80%;\n    }\n\n    .heading-scroll-section {\n      font-size: 24px;\n      line-height:23px;\n    }\n\n    .content-scroll-section {\n      margin-top: 36px;\n      width: 80%;\n      font-size: 20px;\n    }\n  }\n}\n`;\n\nexport default SliderHomePage;\n","import React from 'react';\nimport SliderHomePageStyle from '../styles/SliderHomePage';\n\nconst SliderHomePage = (props) => {\n  return (\n    <SliderHomePageStyle dark={props.dark}>\n      <div className=\"circle-container\">\n        <div>\n          <h3 className=\"heading-scroll-section\">{props.project || 'HEADER COMES HERE'}</h3>\n\n          <hr className=\"line-scroll-section\"></hr>\n        </div>\n\n        <span className=\"circle-scroll-section\"></span>\n      </div>\n\n      <a href={props.link} target=\"_blank\" rel=\"noreferrer noopener\" className=\"content-scroll-section\">\n        {props.title || 'Lorem ipsum dolor sit amet'}\n      </a>\n    </SliderHomePageStyle>\n  );\n};\n\nexport default SliderHomePage;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\n\nconst MiniTeam = styled.div`\n  padding: 0 30px;\n  h3 {\n    font-family: Bungee;\n    font-size: 32px;\n    width: 60px;\n    display: inline-block;\n    text-align: left;\n    margin-bottom: 16px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin-bottom: 50px;\n    h3 {\n      font-size: 44px;\n      width: max-content;\n      margin-bottom: 35px;\n    }\n  }\n`;\n\nconst TeamGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 140px);\n  grid-gap: 20px;\n\n  @media (min-width: 834px) {\n    grid-template-columns: repeat(4, 150px);\n    column-gap: 60px;\n    row-gap: 60px;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 150px);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(3, 180px);\n  }\n\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(4, 180px);\n  }\n`;\n\nconst MemberContainer = styled(Link)`\n  text-decoration: none;\n\n  .gatsby-image-wrapper {\n    height: 200px;\n  }\n\n  p {\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    font-weight: 600;\n    color: black;\n  }\n\n  @media (min-width: 1280px) {\n    p {\n      font-size: 18px;\n    }\n\n    .gatsby-image-wrapper {\n      height: 240px;\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .gatsby-image-wrapper {\n      height: 300px;\n      width: 100%;\n    }\n  }\n`;\n\nconst Member = ({ image, name, link }) => {\n  return (\n    <MemberContainer to={link}>\n      <Image fluid={image} />\n      <p>{name}</p>\n    </MemberContainer>\n  );\n};\n\nconst MiniTeamSection = ({ members }) => {\n  return (\n    <MiniTeam>\n      <h3>Team</h3>\n      <TeamGrid>\n        {members.map((member) => (\n          <Member\n            key={member.id}\n            link={member.fields.slug}\n            image={member.frontmatter.image?.childImageSharp.fluid}\n            name={member.frontmatter.name}\n          />\n        ))}\n      </TeamGrid>\n    </MiniTeam>\n  );\n};\n\nexport default MiniTeamSection;\n"],"sourceRoot":""}