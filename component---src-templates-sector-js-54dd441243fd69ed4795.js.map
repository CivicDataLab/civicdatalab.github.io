{"version":3,"sources":["webpack:///./src/templates/sector.js","webpack:///./src/components/BlogStrip.js","webpack:///./src/images/partner-icon.png","webpack:///./src/images/join-icon.png","webpack:///./src/styles/WorkHomePage.js","webpack:///./src/components/WorkHomePage.js","webpack:///./src/components/MiniTeamSection.js"],"names":["SectorInfo","styled","div","SectorLabel","props","color","SectorTemplate","fullSectorName","data","members","nodes","projects","leftContainerRef","React","useRef","rightContainerRef","useFixedScroll","title","markdownRemark","frontmatter","name","ref","map","project","key","id","url","fields","slug","image","childImageSharp","fluid","text","boldText","sectorName","tag","find","sector","BlogStripContainer","BlogPreviewContainer","a","imageUrl","BlogPreview","author","postUrl","href","target","rel","BlogStrip","blogPosts","useMediumFeed","filter","post","categories","indexOf","slice","guid","getCoverImageUrlFromMediumPost","link","module","exports","WorkHomePage","useStaticQuery","file","MainContainer","className","HeroText","light","to","src","require","alt","MiniTeam","TeamGrid","MemberContainer","Link","Member","MiniTeamSection","member"],"mappings":"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","file":"component---src-templates-sector-js-54dd441243fd69ed4795.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout/Layout';\nimport { TitleContainer, ProjectsContainer, ProjectsContent } from '../pages/work';\nimport SectorNav from '../components/SectorNav';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport WorkHomePage from '../components/WorkHomePage';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\nimport BlogStrip from '../components/BlogStrip';\n\nconst SectorInfo = styled.div`\n  a {\n    display: inline-block;\n    color: #1eb0d3;\n    width: 200px;\n  }\n\n  @media (min-width: 1024px) {\n    a {\n      width: 200px;\n      font-size: 18px;\n      line-height: 27px;\n      margin-top: 20px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.div`\n  display: none;\n  @media (min-width: 1024px) {\n    display: block;\n    background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n    width: max-content;\n    padding: 15px 26px;\n    font-size: 25px;\n    font-weight: 500;\n  }\n`;\n\nconst sectorBlogTagGenerator = (fullSectorName) => {\n  const sectorTags = [\n    { name: 'Public Finance', tag: 'publicfinance' },\n    { name: 'Law & Justice', tag: 'law' },\n    { name: 'Education', tag: 'education' },\n    { name: 'Urban Planning', tag: 'cities' },\n    { name: 'FOSS', tag: 'foss' }\n  ];\n\n  return sectorTags.find((sector) => sector.name === fullSectorName).tag;\n};\n\nconst SectorTemplate = ({ data }) => {\n  const members = data.members.nodes;\n  const projects = data.projects.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title={data.markdownRemark.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Work</HeroText>\n            <SectorInfo>\n              <SectorLabel color={data.markdownRemark.frontmatter.color}>\n                {data.markdownRemark.frontmatter.name}\n              </SectorLabel>\n              {/* <a href=\"#\">View All {data.markdownRemark.frontmatter.name} Case Studies</a> */}\n            </SectorInfo>\n          </TitleContainer>\n          <ProjectsContent ref={rightContainerRef}>\n            <SectorNav />\n            <ProjectsContainer>\n              {projects.map((project) => (\n                <ImageItem\n                  key={project.id}\n                  url={project.fields.slug}\n                  image={project.frontmatter.image.childImageSharp.fluid}\n                  text={project.frontmatter.name}\n                  boldText\n                />\n              ))}\n            </ProjectsContainer>\n            <MiniTeamSection members={members} />\n          </ProjectsContent>\n        </StandardGrid>\n      </MainContainer>\n      <BlogStrip sectorName={sectorBlogTagGenerator(data.markdownRemark.frontmatter.name)} />\n      <WorkHomePage />\n    </Layout>\n  );\n};\n\nexport default SectorTemplate;\n\nexport const pageQuery = graphql`\n  query SectorQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        name\n        description\n        color\n        events {\n          url\n          title\n          type\n          project\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { sectors: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"project\" }, sector: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getCoverImageUrlFromMediumPost } from '../utils/helpers';\nimport useMediumFeed from '../hooks/useMediumFeed';\n\nconst BlogStripContainer = styled.div`\n  display: grid;\n  margin: 40px auto;\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nconst BlogPreviewContainer = styled.a`\n  color: white;\n  padding: 20px;\n  background-image: ${(props) => (props.imageUrl ? `url(${props.imageUrl})` : '')};\n  background-size: cover;\n  background-repeat: no-repeat;\n  box-shadow: inset 0 0 0 2000px rgba(0, 0, 0, 0.65);\n  text-decoration: none;\n  transition: 0.5s;\n\n  &:hover {\n    box-shadow: inset 0 0 0 2000px rgba(0, 0, 0, 0.45);\n  }\n`;\n\nconst BlogPreview = ({ title, author, imageUrl, postUrl }) => {\n  return (\n    <BlogPreviewContainer href={postUrl} target=\"_blank\" rel=\"noreferrer noopener\" imageUrl={imageUrl}>\n      <h2>{title}</h2>\n      <p>by {author}</p>\n    </BlogPreviewContainer>\n  );\n};\n\nconst BlogStrip = ({ sectorName }) => {\n  const [blogPosts] = useMediumFeed('civicdatalab');\n\n  return (\n    <BlogStripContainer>\n      {blogPosts\n        .filter((post) => post.categories.indexOf(sectorName) > -1)\n        ?.slice(0, 4)\n        .map((post) => (\n          <BlogPreview\n            key={post.guid}\n            title={post.title}\n            author={post['dc:creator']}\n            imageUrl={getCoverImageUrlFromMediumPost(post['content:encoded'])}\n            postUrl={post.link}\n          />\n        ))}\n    </BlogStripContainer>\n  );\n};\n\nexport default BlogStrip;\n","module.exports = __webpack_public_path__ + \"static/partner-icon-7554ca9e65c9657c0c7a6fa0c31b58e5.png\";","module.exports = __webpack_public_path__ + \"static/join-icon-878317927344d62e39d89d5ca4b1683f.png\";","import styled from 'styled-components';\n\nconst WorkHomePage = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 40px 0;\n\n  .sub-text {\n    width: 100%;\n  }\n\n  hr {\n    border: 8px solid #FFF;\n    border-radius: 12px;\n    width: 58px;\n    margin-left: 0px;\n    margin-top: 18px;\n  }\n\n  .content {\n    margin-bottom: 20px;\n  }\n\n  .first-text-block {\n    text-align: left;\n    font-size: 18px;\n    line-height: 1.4em;\n    font-family: Montserrat;\n    margin-top: 16px;\n    padding-left: 0px;\n  }\n\n  .circle-wrapper {\n    display: grid;\n    margin-top: 80px;\n  }\n\n  .circle {\n    height: 159px;\n    width: 159px;\n    background-color: #ffffff;\n    border-radius: 50%;\n    margin-bottom: 14px;\n    box-shadow: 0px 10px 30px #A2CAFD3C;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    img {\n      width: 100%;\n      height: 100%;\n    }\n  }\n\n  .below-text {\n    text-align: left;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 31px;\n    font-family: Montserrat;\n    letter-spacing: 0px;\n    color: #ffffff;\n    width: 100%;\n    text-decoration: none;\n  }\n\n  p {\n    padding-left: 22px;\n    padding-right: 21px;\n    padding-top: 4px;\n    padding-bottom: 5px;\n    display: flex;\n    justify-content: center;\n    margin: 0;\n  }\n\n  .content-circle {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n    color: white;\n    text-decoration: none;\n\n    &:hover {\n      .circle {\n        box-shadow: 0px 10px 60px #A2CAFD3C;\n      }\n    }\n  }\n\n  #first-circle {\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: 550px) {\n    .circle-wrapper {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media (min-width: 900px) {\n    padding-top: 40px;\n    padding-bottom: 40px;\n    max-width: 100%;\n    .container-work-section {\n      display: flex;\n    }\n    .circle-wrapper {\n      justify-items: start;\n      width: 50%;\n    }\n    .content {ase64\n      tracedSVG\n      srcWebp\n      srcSetWebp\n      originalImg\n      originalName\n      font-size: 18px;\n      line-height: 25px;\n      width: 50%;\n    }\n\n    .circle-wrapper {\n      grid-template-columns: 360px 360px;\n    }\n    .circle {\n      margin-bottom: 24px;\n      width: 240px;\n      height: 240px;\n\n      img {\n        width: 240px;\n        height: 240px;\n      }\n    }\n  }\n\n  @media(min-width: 1280px) {\n    flex-direction: row;\n    padding: 100px 0px;\n    margin-bottom: 60px;\n\n    .first-text-block {\n      width: 60%;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    padding: 150px 0px;\n    margin-bottom: 80px;\n\n    .sub-text {\n      font-size: 60px;\n      line-height: 60px;\n    }\n\n    .circle {\n      width: 260px;\n      height: 260px;\n    }\n\n    .below-text {\n      font-size: 20px;\n    }\n\n    .first-text-block {\n      font-size: 18px;\n      line-height: 27px;\n      width: 40%;\n    }\n    .work-home-page {\n      width: 94px;\n      margin-top: 40px;\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport default WorkHomePage;\n","import React from 'react';\nimport WorkHomePageStyle from '../styles/WorkHomePage';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport BackgroundImage from 'gatsby-background-image';\nimport HeroText from '../styles/HeroText';\nimport MainContainer from '../styles/MainContainer';\n\nconst WorkHomePage = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        file(relativePath: { eq: \"pattern.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <BackgroundImage fluid={data.file.childImageSharp.fluid}>\n      <MainContainer>\n        <WorkHomePageStyle>\n          <div className={'content'}>\n            <HeroText light className={'work-part'}>\n              Work{' '}\n            </HeroText>\n            <HeroText light className={'sub-text'}>\n              {' '}\n              With Us!\n            </HeroText>\n            <hr className={'work-home-page'}></hr>\n            <p className={'first-text-block'}>\n              Let’s co-create the next solution enabling sustainable social change in your area of work\n            </p>\n          </div>\n          <div className={'circle-wrapper'}>\n            <Link to=\"/contact\" className={'content-circle'} id=\"first-circle\">\n              <div className={'circle'}>\n                <img src={require('../images/join-icon.png')} alt=\"Join us\" />\n              </div>\n              <div className={'below-text'}>\n                <p>Partner With Us</p>\n              </div>\n            </Link>\n            <Link to=\"/openings\" className={'content-circle'}>\n              <div className={'circle'}>\n                <img src={require('../images/partner-icon.png')} alt=\"Partner with us\" />\n              </div>\n              <div className={'below-text'}>\n                <p>Join Us</p>\n              </div>\n            </Link>\n          </div>\n        </WorkHomePageStyle>\n      </MainContainer>\n    </BackgroundImage>\n  );\n};\n\nexport default WorkHomePage;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\n\nconst MiniTeam = styled.div`\n  padding: 0;\n  h3 {\n    font-family: Bungee;\n    font-size: 32px;\n    width: 60px;\n    display: inline-block;\n    text-align: left;\n    margin-bottom: 16px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin-bottom: 50px;\n    h3 {\n      font-size: 44px;\n      width: max-content;\n      margin-bottom: 35px;\n    }\n  }\n`;\n\nconst TeamGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n\n  @media (min-width: 834px) {\n    grid-template-columns: repeat(4, 150px);\n    column-gap: 60px;\n    row-gap: 60px;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 150px);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(3, 180px);\n  }\n\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(4, 180px);\n  }\n`;\n\nconst MemberContainer = styled(Link)`\n  text-decoration: none;\n\n  .gatsby-image-wrapper {\n    height: 200px;\n  }\n\n  p {\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    font-weight: 600;\n    color: black;\n  }\n\n  @media (min-width: 1280px) {\n    p {\n      font-size: 18px;\n    }\n\n    .gatsby-image-wrapper {\n      height: 240px;\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .gatsby-image-wrapper {\n      height: 300px;\n      width: 100%;\n    }\n  }\n`;\n\nconst Member = ({ image, name, link }) => {\n  return (\n    <MemberContainer to={link}>\n      <Image fluid={image} />\n      <p>{name}</p>\n    </MemberContainer>\n  );\n};\n\nconst MiniTeamSection = ({ members }) => {\n  return (\n    <MiniTeam>\n      <h3>Team</h3>\n      <TeamGrid>\n        {members.map((member) => (\n          <Member\n            key={member.id}\n            link={member.fields.slug}\n            image={member.frontmatter.image?.childImageSharp.fluid}\n            name={member.frontmatter.name}\n          />\n        ))}\n      </TeamGrid>\n    </MiniTeam>\n  );\n};\n\nexport default MiniTeamSection;\n"],"sourceRoot":""}