{"version":3,"sources":["webpack:///./src/components/EventNav.js","webpack:///./src/pages/events.js","webpack:///./src/templates/eventdetail.js","webpack:///./src/components/ImageEventItem.js"],"names":["EventNavItem","styled","Link","EventNavContainer","div","EventNav","eventdata","useStaticQuery","allMarkdownRemark","edges","activeClassName","to","map","event","key","node","id","fields","slug","frontmatter","name","TitleContainer","EventsContent","EventsContainer","Events","events","data","nodes","leftContainerRef","React","useRef","rightContainerRef","useFixedScroll","title","ref","url","image","childImageSharp","fluid","text","eventName","eventtype","boldText","EventDetailTitleContainer","EventDetailContent","ImageSection","SummaryText","EventDetailText","LeftText","props","mobile","SocialLinksContainer","PartnersContainer","EventDetailTemplate","eventdetail","markdownRemark","members","partners","twitter","linkedin","github","youtube","facebook","solution","aim","resources","newsletter","target","rel","href","className","length","partner","website","fixed","logo","summary","context","markdown","dangerouslySetInnerHTML","__html","html","ImageEventContainer","boldtext","EventLabel","p","color","ImageEvent","toString"],"mappings":"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","file":"component---src-templates-eventdetail-js-f6f3d34dd7ac66342e8d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst EventNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst EventNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-event {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst EventNav = () => {\n  const data = useStaticQuery(graphql`\n    query EventNavQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"eventtype\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const eventdata = data.allMarkdownRemark.edges;\n\n  return (\n    <EventNavContainer>\n      <EventNavItem activeClassName=\"active-event\" to=\"/events\">\n        All\n      </EventNavItem>\n      {eventdata.map((event) => (\n        <EventNavItem activeClassName=\"active-event\" key={event.node.id} to={event.node.fields.slug}>\n          { event.node.frontmatter.name}\n        </EventNavItem>\n      ))}\n    </EventNavContainer>\n  );\n};\n\nexport default EventNav;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport EventNav from '../components/EventNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageEventItem from '../components/ImageEventItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\nimport { SocialLinks } from '../components/Contact';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const EventsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const EventsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nconst Events = ({ data }) => {\n  const events = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Event\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Events</HeroText>\n            <SocialLinks />\n          </TitleContainer>\n          <EventsContent ref={rightContainerRef}>\n            <EventNav />\n            <EventsContainer>\n              {events.map((event) => (\n                <ImageEventItem\n                  key={event.id}\n                  url={event.fields.slug}\n                  image={event.frontmatter.image.childImageSharp.fluid}\n                  text={event.frontmatter.name}\n                  eventName={event.frontmatter.eventtype}\n                  boldText\n                />\n              ))}\n            </EventsContainer>\n          </EventsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Events;\n\n\nexport const pageQuery = graphql`\n  query EventCompQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"eventdetail\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          eventtype\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaYoutube, FaFacebook } from 'react-icons/fa';\n\nimport Layout from '../components/Layout/Layout';\nimport HeroText from '../styles/HeroText';\nimport { TitleContainer } from '../pages/events';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\nimport Resources from '../components/Resources';\nimport MarkdownView from 'react-showdown';\n\nconst EventDetailTitleContainer = styled(TitleContainer)`\n  @media (min-width: 1280px) {\n    h1 {\n      overflow-wrap: break-word;\n      font-size: 45px;\n      line-height: 1em;\n      width: 380px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    h1 {\n      font-size: 45px;\n      font-weight: 1em;\n      min-width: 350px;\n    }\n  }\n`;\n\nconst EventDetailContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 5/13;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1920px) {\n    grid-column: 4/13;\n  }\n`;\n\nconst ImageSection = styled.div`\n  position: relative;\n  margin-bottom: 80px;\n\n  .gatsby-image-wrapper {\n    max-height: 400px;\n  }\n\n  @media (min-width: 1280px) {\n    .gatsby-image-wrapper {\n      max-height: 750px;\n    }\n  }\n`;\n\nconst SummaryText = styled.div`\n  background-color: #dded1b;\n  font-weight: 500;\n  font-size: 20px;\n  width: 85%;\n  position: absolute;\n  bottom: -100px;\n  padding: 20px 24px;\n  box-sizing: border-box;\n\n  @media (min-width: 834px) {\n    left: 0px;\n    font-size: 24px;\n    bottom: -50px;\n  }\n\n  @media (min-width: 1024px) {\n    left: -32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 35px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 1.5em;\n    left: -30px;\n    bottom: -100px;\n    padding: 45px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 45px;\n    padding: 60px;\n  }\n`;\n\nconst EventDetailText = styled.div`\n  padding: 0;\n  margin: 30px 0;\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  > p {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  > div p {\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin: 40px 0;\n  }\n\n  @media (min-width: 1440px) {\n    width: 50%;\n\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst LeftText = styled.div`\n  margin: 30px 0;\n  padding: ${(props) => (props.mobile ? '0 32px' : '0')};\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  text-align: ${(props) => (props.mobile ? 'center' : 'left')};\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  p:first-of-type {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  p:last-of-type {\n    margin-top: 8px;\n  }\n\n  .btn-newsletter {\n    margin-top: 12px;\n    padding: 12px 18px;\n    background-color: #1dcccc;\n    color: black;\n    font-weight: 500;\n    border-radius: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    padding: 0;\n    margin: 36px 0;\n\n    a {\n      max-width: 250px;\n      word-wrap: break-word;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst SocialLinksContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  justify-content: ${(props) => (props.mobile ? 'center' : 'start')};\n\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background-color: black;\n    width: 45px;\n    height: 45px;\n    border-radius: 100%;\n    color: white;\n    margin-right: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst PartnersContainer = styled.div`\n  a {\n    display: block;\n    margin-top: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-bottom: 60px;\n  }\n`;\n\nconst EventDetailTemplate = ({ data }) => {\n  const eventdetail = data.markdownRemark;\n  const members = data.members.nodes;\n  const partners = data.partners.nodes;\n\n  const { twitter, linkedin, github, youtube, facebook, url, solution, aim, resources, newsletter } = eventdetail.frontmatter;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef, 750);\n\n  return (\n    <Layout>\n      <Seo title={eventdetail.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <EventDetailTitleContainer ref={leftContainerRef}>\n            <HeroText>\n                {eventdetail.frontmatter.name}\n            </HeroText>\n\n            <LeftText>\n              {url && (\n                <>\n                  <p>Check our event here:</p>\n                  <a target=\"_blank\" rel=\"noreferrer noopener\" href={url}>\n                    {url}\n                  </a>\n                </>\n              )}\n              <SocialLinksContainer>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n\n            {newsletter && (\n              <LeftText>\n                <p>Subscribe to our newsletter:</p>\n                <a className=\"btn-newsletter\" href={newsletter}>\n                  Subscribe\n                </a>\n              </LeftText>\n            )}\n            {partners.length ? (\n              <LeftText>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            ) : null}\n          </EventDetailTitleContainer>\n          <EventDetailContent ref={rightContainerRef}>\n            <ImageSection>\n              <Image fluid={eventdetail.frontmatter.image.childImageSharp.fluid} />\n              <SummaryText>{eventdetail.frontmatter.summary}</SummaryText>\n            </ImageSection>\n            <EventDetailText>\n              <p>Context:</p>\n              {eventdetail.frontmatter.context ? (\n                <MarkdownView markdown={eventdetail.frontmatter.context} />\n              ) : (\n                <div dangerouslySetInnerHTML={{ __html: eventdetail.html }} />\n              )}\n            </EventDetailText>\n            {aim && (\n              <EventDetailText>\n                <p>Aim:</p>\n                <MarkdownView markdown={aim} />\n              </EventDetailText>\n            )}\n            {solution && (\n              <EventDetailText>\n                <p>Our solution:</p>\n                <MarkdownView markdown={solution} />\n              </EventDetailText>\n            )}\n\n            <LeftText mobile>\n              <p>Check our work here:</p>\n              <a target=\"_blank\" rel=\"noreferrer noopener\" href={`https://${url}`}>\n                {url}\n              </a>\n              <SocialLinksContainer mobile>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n            {partners && (\n              <LeftText mobile>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            )}\n          </EventDetailContent>\n        </StandardGrid>\n      </MainContainer>\n      <MainContainer>\n        <StandardGrid>\n          <EventDetailContent>\n            <MiniTeamSection members={members} />\n            {resources && <Resources resources={resources} />}\n          </EventDetailContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default EventDetailTemplate;\n\nexport const pageQuery = graphql`\n  query EventDetailQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        name\n        summary\n        context\n        aim\n        solution\n        url\n        github\n        twitter\n        linkedin\n        youtube\n        facebook\n        newsletter\n        resources {\n          link\n          title\n          type\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1200, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { eventdetails: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    partners: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projectpart/\" }, frontmatter: { eventdetails: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          name\n          website\n          logo {\n            childImageSharp {\n              fixed(width: 110) {\n                ...GatsbyImageSharpFixed_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageEventContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst EventLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst ImageEvent = ({ url, image, text, eventName, boldText }) => {\n  return (\n    <ImageEventContainer boldtext={boldText.toString()} to={url || '/'}>\n      {eventName ? <EventLabel >{eventName}</EventLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageEventContainer>\n  );\n};\n\nexport default ImageEvent;\n"],"sourceRoot":""}