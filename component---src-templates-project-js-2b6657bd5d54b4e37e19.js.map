{"version":3,"sources":["webpack:///./src/styles/TeamHomePage.js","webpack:///./src/components/ImageItem.js","webpack:///./src/styles/HeroText.js","webpack:///./src/templates/project.js","webpack:///./src/pages/work.js","webpack:///./src/components/Resources.js","webpack:///./src/components/SectorNav.js","webpack:///./src/hooks/useFixedScroll.js","webpack:///./src/components/MiniTeamSection.js","webpack:///./src/styles/StandardGrid.js"],"names":["TeamHomePage","styled","div","ImageItemContainer","Link","props","boldtext","SectorLabel","p","color","sectors","name","sectorLabelColorGenerator","sectorName","find","sector","ImageItem","url","image","text","boldText","toString","to","fluid","HeroText","h1","light","ProjectContent","ImageSection","SummaryText","ProjectText","LeftText","mobile","SocialLinksContainer","PartnersContainer","ProjectTemplate","data","project","markdownRemark","members","nodes","partners","frontmatter","twitter","linkedin","github","facebook","solution","aim","resources","leftContainerRef","React","useRef","rightContainerRef","useFixedScroll","title","ref","style","wordWrap","maxWidth","target","rel","href","map","partner","key","id","website","fixed","logo","childImageSharp","summary","context","TitleContainer","ProjectsContent","ProjectsContainer","Sectors","projects","allMarkdownRemark","fields","slug","ResourcesStyle","TeamHomePageStyle","Resources","onlyBlogs","className","resource","link","SectorNavItem","SectorNavContainer","SectorNav","sectorsData","useStaticQuery","edges","activeClassName","node","leftRef","rightRef","useEffect","scrollHandler","window","innerWidth","scrollY","current","scrollHeight","position","addEventListener","removeEventListener","MiniTeam","TeamGrid","MemberContainer","Member","MiniTeamSection","member","StandardGrid"],"mappings":"y/DAEA,IAAMA,E,UAAeC,EAAOC,IAAV,KA8GHF,O,m6BC3Gf,IAAMG,EAAqBF,YAAOG,IAAPH,CAAH,KAeL,SAACI,GAAD,OAAYA,EAAMC,SAAW,MAAQ,YAiBlDC,EAAcN,IAAOO,EAAV,KAGK,SAACH,GAAD,OAAYA,EAAMI,MAAQJ,EAAMI,MAAQ,aAYxDC,EAAU,CACd,CAAEC,KAAM,YAAaF,MAAO,WAC5B,CAAEE,KAAM,8BAA+BF,MAAO,WAC9C,CAAEE,KAAM,gBAAiBF,MAAO,WAChC,CAAEE,KAAM,iBAAkBF,MAAO,WACjC,CAAEE,KAAM,iBAAkBF,MAAO,YAG7BG,EAA4B,SAACC,GACjC,OAAOH,EAAQI,MAAK,SAACC,GAAD,OAAYA,EAAOJ,OAASE,KAAYJ,OAY/CO,IATG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMN,EAA2B,EAA3BA,WAAYO,EAAe,EAAfA,SACjD,OACE,kBAACjB,EAAD,CAAoBG,SAAUc,EAASC,WAAYC,GAAIL,GAAO,KAC3DJ,EAAa,kBAACN,EAAD,CAAaE,MAAOG,EAA0BC,IAAcA,GAA4B,KACrGK,EAAQ,kBAAC,IAAD,CAAOK,MAAOL,IAAY,8BAFrC,IAE8C,2BAAIC,M,oYClEtD,IAAMK,E,UAAWvB,EAAOwB,GAAV,KAIH,SAACpB,GAAD,OAAYA,EAAMqB,MAAQ,QAAU,WAYhCF,O,03GCAf,IAAMG,EAAiB1B,IAAOC,IAAV,KAkBd0B,EAAe3B,IAAOC,IAAV,KAeZ2B,EAAc5B,IAAOC,IAAV,KAqCX4B,EAAc7B,IAAOC,IAAV,KAuCX6B,EAAW9B,IAAOC,IAAV,KAED,SAACG,GAAD,OAAYA,EAAM2B,OAAS,SAAW,OACtC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,QAAU,UAClC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,SAAW,UAwBvC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,OAAS,WAiB7CC,EAAuBhC,IAAOC,IAAV,KAGL,SAACG,GAAD,OAAYA,EAAM2B,OAAS,SAAW,WAqBrDE,EAAoBjC,IAAOC,IAAV,KAmLRiC,UAvIS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAUD,EAAKE,eACfC,EAAUH,EAAKG,QAAQC,MACvBC,EAAWL,EAAKK,SAASD,MAHK,EAK2CH,EAAQK,YAA/EC,EAL4B,EAK5BA,QAASC,EALmB,EAKnBA,SAAUC,EALS,EAKTA,OAAQC,EALC,EAKDA,SAAU7B,EALT,EAKSA,IAAK8B,EALd,EAKcA,SAAUC,EALxB,EAKwBA,IAAKC,EAL7B,EAK6BA,UAE3DC,EAAmBC,IAAMC,OAAO,MAChCC,EAAoBF,IAAMC,OAAO,MAIvC,OAFAE,YAAeJ,EAAkBG,GAG/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAOlB,EAAQK,YAAY/B,OAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,iBAAD,CAAgB6C,IAAKN,GACnB,kBAAC,IAAD,CAAUO,MAAO,CAAEC,SAAU,aAAcC,SAAU,UAAYtB,EAAQK,YAAY/B,MAErF,kBAACoB,EAAD,KACE,6CACA,uBAAG6B,OAAO,SAASC,IAAI,sBAAsBC,KAAI,WAAa7C,GAC3DA,GAEH,kBAACgB,EAAD,KACGU,GACC,uBAAGmB,KAAMnB,EAASiB,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,OAGHjB,GACC,uBAAGkB,KAAMlB,EAAUgB,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHf,GACC,uBAAGgB,KAAMhB,EAAUc,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHhB,GACC,uBAAGiB,KAAMjB,EAAQe,OAAO,SAASC,IAAI,uBACnC,kBAAC,IAAD,SAMPpB,GACC,kBAACV,EAAD,KACE,mDACA,kBAACG,EAAD,KACGO,EAASsB,KAAI,SAACC,GAAD,OACZ,uBAAGC,IAAKD,EAAQE,GAAIJ,KAAME,EAAQtB,YAAYyB,QAASP,OAAO,SAASC,IAAI,uBACzE,kBAAC,IAAD,CAAOO,MAAOJ,EAAQtB,YAAY2B,KAAKC,gBAAgBF,eAOnE,kBAACzC,EAAD,CAAgB6B,IAAKH,GACnB,kBAACzB,EAAD,KACE,kBAAC,IAAD,CAAOL,MAAOc,EAAQK,YAAYxB,MAAMoD,gBAAgB/C,QACxD,kBAACM,EAAD,KAAcQ,EAAQK,YAAY6B,UAEpC,kBAACzC,EAAD,KACE,uCACA,2BAAIO,EAAQK,YAAY8B,UAEzBxB,GACC,kBAAClB,EAAD,KACE,mCACA,2BAAIkB,IAGPD,GACC,kBAACjB,EAAD,KACE,4CACA,2BAAIiB,IAIR,kBAAChB,EAAD,CAAUC,QAAM,GACd,6CACA,uBAAG4B,OAAO,SAASC,IAAI,sBAAsBC,KAAI,WAAa7C,GAC3DA,GAEH,kBAACgB,EAAD,CAAsBD,QAAM,GAC1B,uBAAG8B,KAAMnB,EAASiB,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,OAEF,uBAAGC,KAAMlB,EAAUgB,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAEF,uBAAGC,KAAMjB,EAAQe,OAAO,SAASC,IAAI,uBACnC,kBAAC,IAAD,SAILpB,GACC,kBAACV,EAAD,CAAUC,QAAM,GACd,mDACA,kBAACE,EAAD,KACGO,EAASsB,KAAI,SAACC,GAAD,OACZ,uBAAGC,IAAKD,EAAQE,GAAIJ,KAAME,EAAQtB,YAAYyB,QAASP,OAAO,SAASC,IAAI,uBACzE,kBAAC,IAAD,CAAOO,MAAOJ,EAAQtB,YAAY2B,KAAKC,gBAAgBF,iBAgBvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACzC,EAAD,KACE,kBAAC,IAAD,CAAiBY,QAASA,OAI/BU,GAAa,kBAAC,IAAD,CAAWA,UAAWA,O,ohDCtWnC,IAAMwB,EAAiBxE,IAAOC,IAAV,KAiCdwE,EAAkBzE,IAAOC,IAAV,KAcfyE,EAAoB1E,IAAOC,IAAV,KA0Df0E,UArCC,SAAC,GAAc,IACvBC,EADsB,EAAXzC,KACK0C,kBAAkBtC,MAElCU,EAAmBC,IAAMC,OAAO,MAChCC,EAAoBF,IAAMC,OAAO,MAIvC,OAFAE,YAAeJ,EAAkBG,GAG/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,aACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACkB,EAAD,CAAgBjB,IAAKN,GACnB,kBAAC,IAAD,kBAEF,kBAACwB,EAAD,CAAiBlB,IAAKH,GACpB,kBAAC,IAAD,MACA,kBAACsB,EAAD,KACGE,EAASd,KAAI,SAAC1B,GAAD,OACZ,kBAAC,IAAD,CACE4B,IAAK5B,EAAQ6B,GACbjD,IAAKoB,EAAQ0C,OAAOC,KACpB9D,MAAOmB,EAAQK,YAAYxB,MAAMoD,gBAAgB/C,MACjDJ,KAAMkB,EAAQK,YAAY/B,KAC1BE,WAAYwB,EAAQK,YAAY3B,OAChCK,UAAQ,c,sjBCnG1B,IAAM6D,EAAiBhF,YAAOiF,IAAPjF,CAAH,KA+CLkF,IAtBG,SAAC,GAA8B,IAA5BlC,EAA2B,EAA3BA,UAAWmC,EAAgB,EAAhBA,UAC9B,OACE,kBAAC,IAAD,KACE,kBAACH,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKI,UAAW,iCACd,kBAAC,IAAD,CAAUA,UAAW,mBAAoBD,EAAY,QAAU,cAEjE,yBAAKC,UAAW,iCACd,6BACCpC,aAFH,EAEGA,EAAWc,KAAI,SAACuB,GAAD,OACd,uBAAGrB,IAAKqB,EAASC,KAAMzB,KAAMwB,EAASC,KAAM3B,OAAO,SAASC,IAAI,uBAC7DyB,EAAS/B,gB,i1CCxC1B,IAAMiC,EAAgBvF,YAAOG,IAAPH,CAAH,KAsCbwF,EAAqBxF,IAAOC,IAAV,KAgETwF,IAnCG,WAChB,IAkBMC,EAlBOC,YAAe,cAkBHd,kBAAkBe,MAE3C,OACE,kBAACJ,EAAD,KACE,kBAACD,EAAD,CAAeM,gBAAgB,gBAAgBxE,GAAG,UAAlD,OAGCqE,EAAY5B,KAAI,SAAChD,GAAD,OACf,kBAACyE,EAAD,CAAeM,gBAAgB,gBAAgB7B,IAAKlD,EAAOgF,KAAK7B,GAAI5C,GAAIP,EAAOgF,KAAKhB,OAAOC,MACvD,gCAAjCjE,EAAOgF,KAAKrD,YAAY/B,KAAyC,OAASI,EAAOgF,KAAKrD,YAAY/B,Y,kCCnG7G,kDAEe,SAAS2C,EAAe0C,EAASC,GAC9CC,qBAAU,WACR,SAASC,IACHC,OAAOC,YAAc,OACnBJ,GAAYG,OAAOE,QAAUL,EAASM,QAAQC,aAAe,EAAI,IACnER,EAAQO,QAAQ9C,MAAMgD,SAAW,SAEjCT,EAAQO,QAAQ9C,MAAMgD,SAAW,SAOvC,OAFAL,OAAOM,iBAAiB,SAAUP,GAE3B,WACLC,OAAOO,oBAAoB,SAAUR,MAEtC,CAACH,EAASC,M,qlDCdf,IAAMW,EAAW3G,IAAOC,IAAV,KAsBR2G,EAAW5G,IAAOC,IAAV,KAwBR4G,EAAkB7G,YAAOG,IAAPH,CAAH,KAkCf8G,EAAS,SAAC,GAA2B,IAAzB7F,EAAwB,EAAxBA,MAAOP,EAAiB,EAAjBA,KAAM4E,EAAW,EAAXA,KAC7B,OACE,kBAACuB,EAAD,CAAiBxF,GAAIiE,GACnB,kBAAC,IAAD,CAAOhE,MAAOL,IACd,2BAAIP,KAuBKqG,IAlBS,SAAC,GAAiB,IAAfzE,EAAc,EAAdA,QACzB,OACE,kBAACqE,EAAD,KACE,oCACA,kBAACC,EAAD,KACGtE,EAAQwB,KAAI,SAACkD,GAAD,aACX,kBAACF,EAAD,CACE9C,IAAKgD,EAAO/C,GACZqB,KAAM0B,EAAOlC,OAAOC,KACpB9D,MAAK,UAAE+F,EAAOvE,YAAYxB,aAArB,aAAE,EAA0BoD,gBAAgB/C,MACjDZ,KAAMsG,EAAOvE,YAAY/B,c,4aCtGrC,IAAMuG,E,UAAejH,EAAOC,IAAV,KAoBHgH","file":"component---src-templates-project-js-2b6657bd5d54b4e37e19.js","sourcesContent":["import styled from 'styled-components';\n\nconst TeamHomePage = styled.div`\n  padding: 48px 0;\n\n  hr {\n    border: 8px solid #000000;\n    border-radius: 12px;\n    width: 58px;\n    margin-left: 0px;\n    margin-top: 18px;\n  }\n\n  p {\n    text-align: left;\n    font-size: 18px;\n    line-height: 1.4em;\n    font-family: Montserrat;\n    color: #000000;\n    margin-top: 25px;\n  }\n\n  .meet-the-team {\n    text-align: left;\n    font-size: 18px;\n    line-height: 33px;\n    font-weight: 500;\n    color: #0da3b7;\n    text-decoration: none;\n  }\n\n  @media (min-width: 900px) {\n    .content {\n      flex: 50%;\n    }\n    .lower-content-section {\n      flex: 50%;\n    }\n    .section-heading {\n      font-size: 32px;\n      line-height: 32px;\n    }\n    p {\n      font-size: 18px;\n      line-height: 27px;\n    }\n    .meet-the-team {\n      font-size: 16x;\n    }\n    @media (min-width: 900px) {\n      .container-team-section {\n        display: flex;\n        padding-right: 0;\n      }\n    }\n  }\n\n  @media (min-width: 1280px) {\n    padding: 40px 0px;\n\n    .section-heading {\n      font-size: 70px;\n      line-height: 67px;\n      margin-top: 63px;\n    }\n    p {\n      font-size: 18px;\n      line-height: 25px;\n      width: 80%;\n    }\n    .meet-the-team {\n      line-height: 70px;\n      font-size: 20px;\n    }\n\n    .upper-content-section {\n      grid-column: 1/4;\n    }\n\n    .lower-content-section {\n      grid-column: 4/12;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .content {\n      flex: 70%;\n    }\n    .section-heading {\n      font-size: 60px;\n      line-height: 60px;\n      margin-top: 150px;\n    }\n    hr {\n      margin-top: 40px;\n      margin-bottom: 40px;\n    }\n    .lower-content-section {\n      margin-top: 80px;\n    }\n\n    p {\n      font-size: 18px;\n      line-height: 27px;\n    }\n\n    .meet-the-team {\n      line-height: 78px;\n    }\n  }\n`;\n\nexport default TeamHomePage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst sectors = [\n  { name: 'Education', color: '#E56997' },\n  { name: 'Free & Open Source Software', color: '#129530' },\n  { name: 'Law & Justice', color: '#FBC740' },\n  { name: 'Public Finance', color: '#66D2D6' },\n  { name: 'Urban Planning', color: '#BD97CB' }\n];\n\nconst sectorLabelColorGenerator = (sectorName) => {\n  return sectors.find((sector) => sector.name === sectorName).color;\n};\n\nconst ImageItem = ({ url, image, text, sectorName, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText.toString()} to={url || '/'}>\n      {sectorName ? <SectorLabel color={sectorLabelColorGenerator(sectorName)}>{sectorName}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import styled from 'styled-components';\n\nconst HeroText = styled.h1`\n  font-family: 'Bungee', cursive;\n  font-size: 32px;\n  line-height: 32px;\n  color: ${(props) => (props.light ? 'white' : 'black')};\n  text-transform: uppercase;\n  margin: 0;\n  text-align: left;\n  width: min-content;\n\n  @media (min-width: 1024px) {\n    font-size: 60px;\n    line-height: 60px;\n  }\n`;\n\nexport default HeroText;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaFacebook } from 'react-icons/fa';\n// import Carousel from 'react-multi-carousel';\n// import 'react-multi-carousel/lib/styles.css';\nimport Layout from '../components/Layout/Layout';\nimport HeroText from '../styles/HeroText';\nimport { TitleContainer } from '../pages/work';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\n// import Timeline from '../components/Timeline';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\nimport Resources from '../components/Resources';\n\nconst ProjectContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0;\n  }\n`;\n\nconst ImageSection = styled.div`\n  position: relative;\n  margin-bottom: 80px;\n\n  .gatsby-image-wrapper {\n    max-height: 400px;\n  }\n\n  @media (min-width: 1280px) {\n    .gatsby-image-wrapper {\n      max-height: 750px;\n    }\n  }\n`;\n\nconst SummaryText = styled.div`\n  background-color: #dded1b;\n  font-weight: 500;\n  font-size: 20px;\n  width: 75%;\n  position: absolute;\n  bottom: -100px;\n  padding: 20px 32px;\n  box-sizing: border-box;\n\n  @media (min-width: 834px) {\n    left: 0px;\n    font-size: 24px;\n    bottom: -50px;\n  }\n\n  @media (min-width: 1024px) {\n    left: -32px;\n  }\n\n  @media (min-width: 1280px) {\n    font-size: 35px;\n  }\n\n  @media (min-width: 1440px) {\n    line-height: 1.5em;\n    left: -30px;\n    bottom: -100px;\n    padding: 45px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 45px;\n    padding: 60px;\n  }\n`;\n\nconst ProjectText = styled.div`\n  padding: 0 32px;\n  margin: 30px 0;\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  p:first-of-type {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  p:last-of-type {\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin: 40px 0;\n  }\n\n  @media (min-width: 1440px) {\n    width: 50%;\n\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst LeftText = styled.div`\n  margin: 30px 0;\n  padding: ${(props) => (props.mobile ? '0 32px' : '0')};\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  text-align: ${(props) => (props.mobile ? 'center' : 'left')};\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  p:first-of-type {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  p:last-of-type {\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    padding: 0;\n    margin: 40px 0;\n\n    a {\n      max-width: 250px;\n      word-wrap: break-word;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst SocialLinksContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  justify-content: ${(props) => (props.mobile ? 'center' : 'start')};\n\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background-color: black;\n    width: 45px;\n    height: 45px;\n    border-radius: 100%;\n    color: white;\n    margin-right: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst PartnersContainer = styled.div`\n  a {\n    display: block;\n    margin-top: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-bottom: 60px;\n  }\n`;\n\n// const StyledCarousel = styled(Carousel)`\n//   li > div {\n//     max-height: 300px;\n//   }\n\n//   @media (min-width: 1024px) {\n//     li > div {\n//       max-height: 600px;\n//       margin-left: 4px;\n//       margin-right: 4px;\n//     }\n//   }\n// `;\n\n// const responsive = {\n//   superLargeDesktop: {\n//     breakpoint: { max: 4000, min: 3000 },\n//     items: 5\n//   },\n//   desktop: {\n//     breakpoint: { max: 3000, min: 1024 },\n//     items: 3\n//   },\n//   tablet: {\n//     breakpoint: { max: 1024, min: 464 },\n//     items: 2\n//   },\n//   mobile: {\n//     breakpoint: { max: 464, min: 0 },\n//     items: 1\n//   }\n// };\n\nconst ProjectTemplate = ({ data }) => {\n  const project = data.markdownRemark;\n  const members = data.members.nodes;\n  const partners = data.partners.nodes;\n\n  const { twitter, linkedin, github, facebook, url, solution, aim, resources } = project.frontmatter;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title={project.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText style={{ wordWrap: 'break-word', maxWidth: '310px' }}>{project.frontmatter.name}</HeroText>\n\n            <LeftText>\n              <p>Check us here:</p>\n              <a target=\"_blank\" rel=\"noreferrer noopener\" href={`https://${url}`}>\n                {url}\n              </a>\n              <SocialLinksContainer>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n\n            {partners && (\n              <LeftText>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            )}\n          </TitleContainer>\n          <ProjectContent ref={rightContainerRef}>\n            <ImageSection>\n              <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n              <SummaryText>{project.frontmatter.summary}</SummaryText>\n            </ImageSection>\n            <ProjectText>\n              <p>Context:</p>\n              <p>{project.frontmatter.context}</p>\n            </ProjectText>\n            {aim && (\n              <ProjectText>\n                <p>Aim:</p>\n                <p>{aim}</p>\n              </ProjectText>\n            )}\n            {solution && (\n              <ProjectText>\n                <p>Our solution:</p>\n                <p>{solution}</p>\n              </ProjectText>\n            )}\n\n            <LeftText mobile>\n              <p>Check us here:</p>\n              <a target=\"_blank\" rel=\"noreferrer noopener\" href={`https://${url}`}>\n                {url}\n              </a>\n              <SocialLinksContainer mobile>\n                <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaTwitter />\n                </a>\n                <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaLinkedinIn />\n                </a>\n                <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaGithubAlt />\n                </a>\n              </SocialLinksContainer>\n            </LeftText>\n            {partners && (\n              <LeftText mobile>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            )}\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n      {/* {project.frontmatter.timeline && <Timeline timelineItems={project.frontmatter.timeline} />} */}\n      {/* <StyledCarousel responsive={responsive}>\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n      </StyledCarousel> */}\n      <MainContainer>\n        <StandardGrid>\n          <ProjectContent>\n            <MiniTeamSection members={members} />\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n      {resources && <Resources resources={resources} />}\n    </Layout>\n  );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n  query ProjectQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        name\n        summary\n        context\n        aim\n        solution\n        url\n        github\n        twitter\n        linkedin\n        facebook\n        resources {\n          link\n          title\n          type\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1200, quality: 100) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n    partners: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projectpart/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          name\n          website\n          logo {\n            childImageSharp {\n              fixed(width: 180) {\n                ...GatsbyImageSharpFixed_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Work</HeroText>\n          </TitleContainer>\n          <ProjectsContent ref={rightContainerRef}>\n            <SectorNav />\n            <ProjectsContainer>\n              {projects.map((project) => (\n                <ImageItem\n                  key={project.id}\n                  url={project.fields.slug}\n                  image={project.frontmatter.image.childImageSharp.fluid}\n                  text={project.frontmatter.name}\n                  sectorName={project.frontmatter.sector}\n                  boldText\n                />\n              ))}\n            </ProjectsContainer>\n          </ProjectsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport TeamHomePageStyle from '../styles/TeamHomePage';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport StandardGrid from '../styles/StandardGrid';\nimport styled from 'styled-components';\n\nconst ResourcesStyle = styled(TeamHomePageStyle)`\n  a {\n    display: block;\n    font-weight: 500;\n    color: #0da3b7;\n    text-decoration: none;\n    padding-bottom: 8px;\n    border-bottom: 1px solid #0da3b7;\n    margin: 20px 0;\n\n    &:hover {\n      color: #1dcccc;\n    }\n  }\n\n  .upper-content-section {\n    max-width: 100%;\n  }\n\n  h1 {\n    overflow-wrap: break-word;\n    max-width: 100%;\n  }\n`;\n\nconst Resources = ({ resources, onlyBlogs }) => {\n  return (\n    <MainContainer>\n      <ResourcesStyle>\n        <StandardGrid>\n          <div className={'content upper-content-section'}>\n            <HeroText className={'section-heading'}>{onlyBlogs ? 'blogs' : 'resources'}</HeroText>\n          </div>\n          <div className={'content lower-content-section'}>\n            <hr />\n            {resources?.map((resource) => (\n              <a key={resource.link} href={resource.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {resource.title}\n              </a>\n            ))}\n          </div>\n        </StandardGrid>\n      </ResourcesStyle>\n    </MainContainer>\n  );\n};\n\nexport default Resources;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work/\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name === 'Free & Open Source Software' ? 'FOSS' : sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n","import { useEffect } from 'react';\n\nexport default function useFixedScroll(leftRef, rightRef) {\n  useEffect(() => {\n    function scrollHandler() {\n      if (window.innerWidth >= 1280) {\n        if (rightRef && window.scrollY > rightRef.current.scrollHeight / 2 + 100) {\n          leftRef.current.style.position = 'static';\n        } else {\n          leftRef.current.style.position = 'fixed';\n        }\n      }\n    }\n\n    window.addEventListener('scroll', scrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  }, [leftRef, rightRef]);\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\n\nconst MiniTeam = styled.div`\n  padding: 0;\n  h3 {\n    font-family: Bungee;\n    font-size: 32px;\n    width: 60px;\n    display: inline-block;\n    text-align: left;\n    margin-bottom: 16px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin-bottom: 50px;\n    h3 {\n      font-size: 44px;\n      width: max-content;\n      margin-bottom: 35px;\n    }\n  }\n`;\n\nconst TeamGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n\n  @media (min-width: 834px) {\n    grid-template-columns: repeat(4, 150px);\n    column-gap: 60px;\n    row-gap: 60px;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 150px);\n  }\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(3, 180px);\n  }\n\n  @media (min-width: 1440px) {\n    grid-template-columns: repeat(4, 180px);\n  }\n`;\n\nconst MemberContainer = styled(Link)`\n  text-decoration: none;\n\n  .gatsby-image-wrapper {\n    height: 200px;\n  }\n\n  p {\n    font-size: 16px;\n    font-weight: 500;\n    text-align: center;\n    font-weight: 600;\n    color: black;\n  }\n\n  @media (min-width: 1280px) {\n    p {\n      font-size: 18px;\n    }\n\n    .gatsby-image-wrapper {\n      height: 240px;\n      width: 100%;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .gatsby-image-wrapper {\n      height: 300px;\n      width: 100%;\n    }\n  }\n`;\n\nconst Member = ({ image, name, link }) => {\n  return (\n    <MemberContainer to={link}>\n      <Image fluid={image} />\n      <p>{name}</p>\n    </MemberContainer>\n  );\n};\n\nconst MiniTeamSection = ({ members }) => {\n  return (\n    <MiniTeam>\n      <h3>Team</h3>\n      <TeamGrid>\n        {members.map((member) => (\n          <Member\n            key={member.id}\n            link={member.fields.slug}\n            image={member.frontmatter.image?.childImageSharp.fluid}\n            name={member.frontmatter.name}\n          />\n        ))}\n      </TeamGrid>\n    </MiniTeam>\n  );\n};\n\nexport default MiniTeamSection;\n","import styled from 'styled-components';\n\nconst StandardGrid = styled.div`\n  display: grid;\n  row-gap: 30px;\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(12, 1fr);\n    column-gap: 25px;\n  }\n\n  @media (min-width: 1440px) {\n    column-gap: 30px;\n    row-gap: 36px;\n  }\n\n  @media (min-width: 1920px) {\n    column-gap: 45px;\n    row-gap: 54px;\n  }\n`;\n\nexport default StandardGrid;\n"],"sourceRoot":""}