{"version":3,"sources":["webpack:///./src/components/BlogCard.js","webpack:///./src/templates/member.js"],"names":["StyledLink","styled","a","Card","div","BlogCard","title","imageUrl","postUrl","href","target","rel","src","alt","MemberContainer","MainContainer","PictureContainer","QuoteContainer","props","background","text","Bio","SocialLinksContainer","BlogContainer","BlogPostGrid","MemberDetails","mobile","MemberTemplate","member","data","markdownRemark","blogPosts","useMediumFeed","frontmatter","medium","Layout","Seo","name","StandardGrid","role","split","map","index","length","key","twitter","linkedin","github","behance","imgStyle","objectFit","objectPosition","maxHeight","fluid","image","childImageSharp","quote","accentcolor","description","d","html","dangerouslySetInnerHTML","__html","post","guid","getCoverImageUrlFromMediumPost","link"],"mappings":"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","file":"component---src-templates-member-js-5a583f484e0d92ec7c93.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  color: #535151 !important;\n\n  @media (min-width: 1280px) {\n    grid-column: span 3;\n  }\n`;\n\nconst Card = styled.div`\n  height: 300px;\n  box-shadow: 7px 3px 4px rgba(0, 0, 0, 0.29);\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst BlogCard = ({ title, imageUrl, postUrl }) => {\n  return (\n    <StyledLink href={postUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Card>\n        <img src={imageUrl} alt={title} />\n      </Card>\n      <h3>{title}</h3>\n    </StyledLink>\n  );\n};\n\nexport default BlogCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaBehance } from 'react-icons/fa';\nimport BlogCard from '../components/BlogCard';\nimport { getCoverImageUrlFromMediumPost } from '../utils/helpers';\nimport useMediumFeed from '../hooks/useMediumFeed';\nimport Seo from '../components/Seo/Seo';\nimport StandardGrid from '../styles/StandardGrid';\nimport MainContainer from '../styles/MainContainer';\n// import MemberImage from '../components/MemberImage';\n\nconst MemberContainer = styled(MainContainer)`\n  margin-top: 20px;\n\n  @media (min-width: 1280px) {\n    margin-top: 80px;\n  }\n`;\n\nconst PictureContainer = styled.div`\n  box-sizing: border-box;\n\n  .gatsby-image-wrapper {\n    height: 400px;\n    margin: auto;\n  }\n\n  @media (min-width: 1024px) {\n    .gatsby-image-wrapper {\n      height: 500px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/6;\n    .gatsby-image-wrapper {\n      height: 600px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .gatsby-image-wrapper {\n      height: 700px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    .gatsby-image-wrapper {\n      height: 900px;\n    }\n  }\n`;\n\nexport const QuoteContainer = styled.div`\n  background-color: ${(props) => (props.background ? props.background : '#1DCCCC')};\n  color: ${(props) => (props.text ? 'white' : 'black')};\n  z-index: -1;\n  padding: 40px 0;\n\n  p {\n    line-height: 28px;\n    font-weight: 300;\n    font-style: italic;\n    position: relative;\n    width: 80%;\n    margin: 0 auto;\n\n    span {\n      display: inline-block;\n    }\n\n    span:first-of-type,\n    span:last-of-type {\n      font-size: 120px;\n      color: rgb(0, 0, 0, 0.26);\n    }\n\n    span:first-of-type {\n      transform: translate(-10px, 20px);\n    }\n\n    span:last-of-type {\n      transform: rotate(-180deg) translate(-80px);\n    }\n  }\n\n  @media (min-width: 1280px) {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    height: 780px;\n    width: 400px;\n\n    p {\n      margin-top: 485px;\n      font-size: 20px;\n      line-height: 1.4em;\n\n      span:first-of-type,\n      span:last-of-type {\n        font-size: 140px;\n      }\n    }\n  }\n\n  @media (min-width: 1440px) {\n    width: 460px;\n    height: 860px;\n    top: 55%;\n\n    p {\n      margin-top: 480px;\n      font-size: 25px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    height: 960px;\n    width: 600px;\n    top: 45%;\n\n    p {\n      margin-top: 700px;\n    }\n  }\n\n  @media (min-width: 2000px) {\n    left: 5%;\n    top: 40%;\n    height: 900px;\n\n    p {\n      margin-top: 650px;\n    }\n  }\n`;\n\nexport const Bio = styled.div`\n  box-sizing: border-box;\n  margin-bottom: 80px;\n\n  p {\n    margin: 18px 0;\n    line-height: 28px;\n  }\n\n  a {\n    color: #168cd6;\n\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-word;\n  }\n\n  li {\n    line-height: 28px;\n  }\n\n  @media (min-width: 1024px) {\n    min-height: 500px;\n    p {\n      font-size: 18px;\n      line-height: 27px;\n      margin: 44px 0;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 6/12;\n    min-height: 1000px;\n  }\n\n  @media (min-width: 1440px) {\n    min-height: 1180px;\n  }\n\n  @media (min-width: 1920px) {\n    min-height: 1280px;\n  }\n`;\n\nexport const SocialLinksContainer = styled.div`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 25px;\n\n    a {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-decoration: none;\n      background-color: black;\n      width: 45px;\n      height: 45px;\n      border-radius: 100%;\n      color: white;\n      margin-left: 8px;\n    }\n\n    a > * {\n      width: 50%;\n      height: 50%;\n    }\n  }\n`;\n\nconst BlogContainer = styled.div`\n  box-sizing: border-box;\n  margin-top: 80px;\n  margin-bottom: 20px;\n\n  > h2 {\n    display: inline-block;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: 1024px) {\n    > h2 {\n      font-size: 40px;\n    }\n  }\n`;\n\nconst BlogPostGrid = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 25px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 6/12;\n    grid-template-columns: repeat(6, 1fr);\n    column-gap: 25px;\n  }\n\n  @media (min-width: 1440px) {\n    column-gap: 30px;\n    row-gap: 45px;\n  }\n\n  @media (min-width: 1920px) {\n    column-gap: 45px;\n  }\n`;\n\nconst MemberDetails = styled.div`\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  h2 {\n    text-transform: uppercase;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 12px;\n    width: 50%;\n  }\n\n  h5 {\n    font-weight: 700;\n    margin: 3px 0;\n  }\n\n  @media (min-width: 1280px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    h2 {\n      font-size: 50px;\n      margin-bottom: 12px;\n    }\n    h5 {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst MemberTemplate = ({ data }) => {\n  const member = data.markdownRemark;\n  const [blogPosts] = useMediumFeed(member.frontmatter.medium);\n\n  return (\n    <Layout>\n      <Seo title={member.frontmatter.name} />\n      <MemberContainer>\n        <StandardGrid>\n          <MemberDetails mobile>\n            <h2>{member.frontmatter.name}</h2>\n            <h5>\n              {member.frontmatter.role.split(',').map((role, index) => {\n                if (index === member.frontmatter.role.split(',').length - 1) {\n                  return <span key={role}>{role}</span>;\n                }\n                return (\n                  <span key={role}>\n                    {role}\n                    {' - '}\n                  </span>\n                );\n              })}\n            </h5>\n          </MemberDetails>\n          <PictureContainer>\n            <SocialLinksContainer>\n              {member.frontmatter.twitter && (\n                <a href={member.frontmatter.twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaTwitter />\n                </a>\n              )}\n              {member.frontmatter.linkedin && (\n                <a href={member.frontmatter.linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaLinkedinIn />\n                </a>\n              )}\n              {member.frontmatter.github && (\n                <a href={member.frontmatter.github} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaGithubAlt />\n                </a>\n              )}\n              {member.frontmatter.behance && (\n                <a href={member.frontmatter.behance} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaBehance />\n                </a>\n              )}\n            </SocialLinksContainer>\n            <Image\n              imgStyle={{\n                objectFit: 'contain',\n                objectPosition: 'top',\n                maxHeight: '600px'\n              }}\n              fluid={member.frontmatter.image?.childImageSharp.fluid}\n            />\n            {member.frontmatter.quote && (\n              <QuoteContainer background={member.frontmatter.accentcolor} text={member.frontmatter.text}>\n                <p>\n                  <span>“</span>\n                  <span>{member.frontmatter.quote}</span>\n                  <span>“</span>\n                </p>\n              </QuoteContainer>\n            )}\n          </PictureContainer>\n          <Bio>\n            <MemberDetails>\n              <h2>{member.frontmatter.name}</h2>\n              <h5>\n                {member.frontmatter.role.split(',').map((role, index) => {\n                  if (index === member.frontmatter.role.split(',').length - 1) {\n                    return <span key={role}>{role}</span>;\n                  }\n                  return (\n                    <span key={role}>\n                      {role}\n                      {' - '}\n                    </span>\n                  );\n                })}\n              </h5>\n            </MemberDetails>\n            {member.frontmatter.description?.split(';').map((d) => (\n              <p key={d}>{d}</p>\n            ))}\n            {member.html && <div dangerouslySetInnerHTML={{ __html: member.html }}></div>}\n            {blogPosts?.length ? (\n              <BlogContainer>\n                <h2>Blogs</h2>\n                <BlogPostGrid>\n                  {blogPosts.map((post) => {\n                    return (\n                      <BlogCard\n                        key={post.guid}\n                        title={post.title}\n                        imageUrl={getCoverImageUrlFromMediumPost(post['content'])}\n                        postUrl={post.link}\n                      />\n                    );\n                  })}\n                </BlogPostGrid>\n              </BlogContainer>\n            ) : null}\n          </Bio>\n        </StandardGrid>\n      </MemberContainer>\n    </Layout>\n  );\n};\n\nexport default MemberTemplate;\n\nexport const pageQuery = graphql`\n  query TeamMemberQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        name\n        role\n        description\n        quote\n        image {\n          childImageSharp {\n            fluid(maxWidth: 800, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        medium\n        github\n        linkedin\n        twitter\n        behance\n        accentcolor\n        text\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}