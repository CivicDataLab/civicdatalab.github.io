{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/styles/HeroText.js","webpack:///./src/styles/MainGrid.js","webpack:///./src/pages/work.js","webpack:///./src/components/SectorNav.js"],"names":["ImageItemContainer","styled","Link","props","boldtext","SectorLabel","p","ImageItem","url","image","text","sector","boldText","to","fluid","HeroText","h1","light","MainGrid","div","TitleContainer","ProjectsContent","ProjectsContainer","Sectors","projects","data","allMarkdownRemark","nodes","title","map","project","key","id","fields","slug","frontmatter","childImageSharp","name","SectorNavItem","SectorNavContainer","SectorNav","sectorsData","useStaticQuery","edges","activeClassName","node"],"mappings":"i+BAKA,IAAMA,EAAqBC,YAAOC,IAAPD,CAAH,KAeL,SAACE,GAAD,OAAYA,EAAMC,SAAW,MAAQ,YAiBlDC,EAAcJ,IAAOK,EAAV,KAwBFC,IATG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC7C,OACE,kBAACZ,EAAD,CAAoBI,SAAUQ,EAAUC,GAAIL,GAAO,KAChDG,EAAS,kBAACN,EAAD,KAAcM,GAAwB,KAC/CF,EAAQ,kBAAC,IAAD,CAAOK,MAAOL,IAAY,8BAFrC,IAE8C,2BAAIC,M,oYCtDtD,IAAMK,E,UAAWd,EAAOe,GAAV,KAIH,SAACb,GAAD,OAAYA,EAAMc,MAAQ,QAAU,WAYhCF,O,oaChBf,IAAMG,E,UAAWjB,EAAOkB,IAAV,KAiBCD,O,4gDCTR,IAAME,EAAiBnB,IAAOkB,IAAV,KA6BdE,EAAkBpB,IAAOkB,IAAV,KAgBfG,EAAoBrB,IAAOkB,IAAV,KA2DfI,UAtCC,SAAC,GAAc,IACvBC,EADsB,EAAXC,KACKC,kBAAkBC,MAExC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,KACE,kBAACR,EAAD,KACE,kBAAC,IAAD,kBAEF,kBAACC,EAAD,KACE,kBAAC,IAAD,MACA,kBAACC,EAAD,KACGE,EAASK,KAAI,SAACC,GAAD,OACZ,kBAAC,IAAD,CACEC,IAAKD,EAAQE,GACbxB,IAAKsB,EAAQG,OAAOC,KACpBzB,MAAOqB,EAAQK,YAAY1B,MAAM2B,gBAAgBtB,MACjDJ,KAAMoB,EAAQK,YAAYE,KAC1B1B,OAAQmB,EAAQK,YAAYxB,OAC5BC,UAAQ,a,uxCC5FxB,IAAM0B,EAAgBrC,YAAOC,IAAPD,CAAH,KAsCbsC,EAAqBtC,IAAOkB,IAAV,KA4DTqB,IAnCG,WAChB,IAkBMC,EAlBOC,YAAe,cAkBHhB,kBAAkBiB,MAE3C,OACE,kBAACJ,EAAD,KACE,kBAACD,EAAD,CAAeM,gBAAgB,gBAAgB/B,GAAG,UAAlD,OAGC4B,EAAYZ,KAAI,SAAClB,GAAD,OACf,kBAAC2B,EAAD,CAAeM,gBAAgB,gBAAgBb,IAAKpB,EAAOkC,KAAKb,GAAInB,GAAIF,EAAOkC,KAAKZ,OAAOC,MACxFvB,EAAOkC,KAAKV,YAAYE","file":"component---src-pages-work-js-590ae2dfd97d36bb4b6c.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: #fa7fe7;\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst ImageItem = ({ url, image, text, sector, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText} to={url || '/'}>\n      {sector ? <SectorLabel>{sector}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import styled from 'styled-components';\n\nconst HeroText = styled.h1`\n  font-family: 'Bungee', cursive;\n  font-size: 32px;\n  line-height: 32px;\n  color: ${(props) => (props.light ? 'white' : 'black')};\n  text-transform: uppercase;\n  margin: 0;\n  text-align: left;\n  width: min-content;\n\n  @media (min-width: 1024px) {\n    font-size: 60px;\n    line-height: 60px;\n  }\n`;\n\nexport default HeroText;\n","import styled from 'styled-components';\n\nconst MainGrid = styled.div`\n  padding-top: 40px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    'left'\n    'bottom'\n    'right';\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-areas:\n      'left right right'\n      'left bottom bottom';\n  }\n`;\n\nexport default MainGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainGrid from '../styles/MainGrid';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\n\nexport const TitleContainer = styled.div`\n  grid-area: left;\n  padding: 0 32px;\n  font-size: 16px;\n  margin-bottom: 10px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    max-width: 60%;\n\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 72px;\n    padding-right: 72px;\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  grid-area: right;\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n  margin-bottom: 80px;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0 32px;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0 16px;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 56px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainGrid>\n        <TitleContainer>\n          <HeroText>Our Work</HeroText>\n        </TitleContainer>\n        <ProjectsContent>\n          <SectorNav />\n          <ProjectsContainer>\n            {projects.map((project) => (\n              <ImageItem\n                key={project.id}\n                url={project.fields.slug}\n                image={project.frontmatter.image.childImageSharp.fluid}\n                text={project.frontmatter.name}\n                sector={project.frontmatter.sector}\n                boldText\n              />\n            ))}\n          </ProjectsContainer>\n        </ProjectsContent>\n      </MainGrid>\n      {/* <MainGrid>\n        <TitleContainer>\n          <h3>Partners</h3>\n        </TitleContainer>\n        <PartnersContainer>\n\n        </PartnersContainer>\n      </MainGrid> */}\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 16px;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work/\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n"],"sourceRoot":""}