{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/styles/HeroText.js","webpack:///./src/styles/MainGrid.js","webpack:///./src/pages/work.js","webpack:///./src/components/SectorNav.js","webpack:///./src/components/MemberImageBox.js","webpack:///./src/styles/SectionHeading.js","webpack:///./src/pages/team.js"],"names":["ImageItemContainer","styled","Link","props","boldtext","SectorLabel","p","ImageItem","url","image","text","sector","boldText","to","fluid","HeroText","h1","light","MainGrid","div","TitleContainer","ProjectsContent","ProjectsContainer","Sectors","projects","data","allMarkdownRemark","nodes","title","map","project","key","id","fields","slug","frontmatter","childImageSharp","name","SectorNavItem","SectorNavContainer","SectorNav","sectorsData","useStaticQuery","edges","activeClassName","node","ImageBox","MemberImageBox","link","role","className","split","SectionHeading","addCSS","Section","section","MemberCardsContainer","StickyBox","mobile","HorizontalImageScrollContainer","fs44","css","CivicDaysSection","CivicDays","item","index","Team","members","membersContainerRef","React","useRef","stickyBoxRef","useEffect","scrollHandler","window","innerWidth","scrollY","current","scrollHeight","style","top","bottom","left","addEventListener","removeEventListener","Layout","Seo","position","height","ref","member"],"mappings":"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","file":"component---src-pages-team-js-87bf7097531b992bb12c.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: #fa7fe7;\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst ImageItem = ({ url, image, text, sector, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText} to={url || '/'}>\n      {sector ? <SectorLabel>{sector}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import styled from 'styled-components';\n\nconst HeroText = styled.h1`\n  font-family: 'Bungee', cursive;\n  font-size: 32px;\n  line-height: 32px;\n  color: ${(props) => (props.light ? 'white' : 'black')};\n  text-transform: uppercase;\n  margin: 0;\n  text-align: left;\n  width: min-content;\n\n  @media (min-width: 1024px) {\n    font-size: 60px;\n    line-height: 60px;\n  }\n`;\n\nexport default HeroText;\n","import styled from 'styled-components';\n\nconst MainGrid = styled.div`\n  padding-top: 40px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    'left'\n    'bottom'\n    'right';\n\n  @media (min-width: 1024px) {\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-areas:\n      'left right right'\n      'left bottom bottom';\n  }\n`;\n\nexport default MainGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainGrid from '../styles/MainGrid';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\n\nexport const TitleContainer = styled.div`\n  grid-area: left;\n  padding: 0 32px;\n  font-size: 16px;\n  margin-bottom: 10px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    max-width: 60%;\n\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 72px;\n    padding-right: 72px;\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  grid-area: right;\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n  margin-bottom: 80px;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0 32px;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0 16px;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 56px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainGrid>\n        <TitleContainer>\n          <HeroText>Our Work</HeroText>\n        </TitleContainer>\n        <ProjectsContent>\n          <SectorNav />\n          <ProjectsContainer>\n            {projects.map((project) => (\n              <ImageItem\n                key={project.id}\n                url={project.fields.slug}\n                image={project.frontmatter.image.childImageSharp.fluid}\n                text={project.frontmatter.name}\n                sector={project.frontmatter.sector}\n                boldText\n              />\n            ))}\n          </ProjectsContainer>\n        </ProjectsContent>\n      </MainGrid>\n      {/* <MainGrid>\n        <TitleContainer>\n          <h3>Partners</h3>\n        </TitleContainer>\n        <PartnersContainer>\n\n        </PartnersContainer>\n      </MainGrid> */}\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 25px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 24px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 16px;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work/\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nconst ImageBox = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  background: #f2f2f2;\n  position: relative;\n  text-decoration: none;\n\n  width: 125px;\n  height: 200px;\n\n  .gatsby-image-wrapper {\n    height: 100%;\n  }\n\n  .member-details {\n    position: absolute;\n    bottom: 0;\n    padding: 15px 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: #ffffff;\n    background: #000000;\n    opacity: 0.76;\n  }\n\n  .member-name {\n    font-size: 16px;\n    font-family: Montserrat;\n  }\n\n  .member-desg {\n    font-style: italic;\n    font-size: 12px;\n    font-family: Montserrat;\n    text-align: center;\n  }\n\n  @media (min-width: 1280px) {\n    width: 220px;\n    height: 360px;\n\n    .member-name {\n      font-size: 20px;\n    }\n    .member-desg {\n      font-size: 14px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    width: 280px;\n    height: 400px;\n    .member-details {\n      padding: 21px 0 28px;\n    }\n  }\n`;\n\nconst MemberImageBox = ({ link, name, role, image }) => {\n  return (\n    <ImageBox to={link}>\n      <Image fluid={image} />\n      <span className=\"member-details\">\n        <span className=\"member-name\">{name.split(' ')[0]}</span>\n        <span className=\"member-desg\">{role}</span>\n      </span>\n    </ImageBox>\n  );\n};\n\nexport default MemberImageBox;\n","import styled from 'styled-components';\n\nconst SectionHeading = styled.h1`\n  font-family: 'Bungee';\n  font-size: 32px;\n  width: 100px;\n  color: ${(props) => (props.light ? 'white' : 'black')};\n  text-transform: uppercase;\n  margin: 0;\n\n  @media (min-width: 1280px) {\n    font-size: 60px;\n    width: 150px;\n  }\n  @media (min-width: 1600px) {\n    font-size: 60px;\n  }\n  ${(props) => props.addCSS}\n`;\n\nexport default SectionHeading;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport MemberImageBox from '../components/MemberImageBox';\nimport SectionHeading from '../styles/SectionHeading';\nimport MainGrid from '../styles/MainGrid';\nimport { TitleContainer } from './work';\nimport Seo from '../components/Seo/Seo';\n\nconst Section = styled.section`\n  padding: 48px 16px 0;\n  max-width: 1140px;\n  .heading-border-bottom {\n    width: 42px;\n    margin-top: 12px;\n    margin-bottom: 18px;\n    border: 8px solid #000000;\n  }\n\n  .section-text {\n    font-size: 18px;\n    line-height: 27px;\n    color: #000000;\n    margin: 0;\n  }\n\n  .heading-border-top {\n    display: none;\n    width: 78px;\n    border: 10px solid #000000;\n    margin-bottom: 18px;\n  }\n\n  @media (min-width: 768px) {\n    .section-text {\n      max-width: 500px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    padding: 48px 32px;\n    .heading-border-bottom {\n      width: 78px;\n      margin-top: 12px;\n      margin-bottom: 18px;\n      border: 8px solid #000000;\n    }\n  }\n  @media (min-width: 1600px) {\n    .heading-border-bottom {\n      border: 10px solid #000000;\n    }\n    .civic-days-section .heading-border-bottom {\n      display: none;\n    }\n    .civic-days-section .heading-border-top {\n      display: block;\n    }\n    .heading-border-top {\n      display: block;\n    }\n  }\n`;\n\nconst MemberCardsContainer = styled.div`\n  display: grid;\n  grid-area: right;\n  grid-template-columns: 1fr 1fr;\n  row-gap: 25px;\n  column-gap: 25px;\n  padding: 0 32px;\n  box-sizing: border-box;\n  justify-content: space-around;\n  margin-bottom: 54px;\n  max-width: 1080px;\n\n  @media (min-width: 500px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: 1024px) {\n    justify-content: space-between;\n    row-gap: 50px;\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0 32px;\n    row-gap: 60px;\n  }\n`;\n\nconst StickyBox = styled.div`\n  padding: 32px 22px;\n  background: #000000;\n  width: 100%;\n  border-radius: 12px;\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  min-height: 230px;\n  box-sizing: border-box;\n\n  h1 {\n    font-family: 'Bungee';\n    font-size: 34px;\n    width: 100%;\n    color: #ffffff;\n    text-transform: uppercase;\n    margin: 0;\n  }\n\n  a {\n    display: inline-block;\n    font-family: Montserrat;\n    font-size: 20px;\n    color: #000000;\n    background: #ffffff;\n    padding: 10px 26px;\n    border-radius: 20px;\n    margin-top: 40px;\n    text-decoration: none;\n  }\n\n  @media (min-width: 1280px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    position: absolute;\n    left: 0px;\n    top: 5%;\n    width: 250px;\n\n    h1 {\n      font-size: 28px;\n      width: 220px;\n    }\n\n    a {\n      font-size: 18px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    top: 10%;\n  }\n`;\n\nconst HorizontalImageScrollContainer = styled.div`\n  display: flex;\n  flex: auto;\n  position: relative;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  border-top: 8px solid #000000;\n  border-bottom: 8px solid #000000;\n  background: #ffffff;\n  overflow-x: auto;\n  margin-top: 14px;\n  margin-bottom: 34px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n\n  div {\n    min-width: 216px;\n    height: 170px;\n    background: #f2f2f2;\n  }\n\n  @media (min-width: 1280px) {\n    margin-top: 38px;\n    div {\n      min-width: 280px;\n      height: 280px;\n      margin-right: 20px;\n    }\n  }\n`;\n\nconst fs44 = css`\n  @media (min-width: 1600px) {\n    font-size: 44px;\n  }\n`;\n\nconst CivicDaysSection = styled.div`\n  display: grid;\n\n  .placeholder-container {\n    padding: 48px 18px 0;\n    display: none;\n  }\n\n  .section-text {\n    line-height: 1.4em;\n  }\n\n  @media (min-width: 1024px) {\n    grid-template-columns: 20% 60%;\n\n    .placeholder-container {\n      display: block;\n    }\n  }\n  @media (min-width: 1600px) {\n    grid-template-columns: 22% 58%;\n    column-gap: 100px;\n\n    .heading-border-bottom {\n      display: none;\n    }\n\n    .section-text {\n      margin-top: 20px;\n    }\n\n    .civic-days-section .heading-border-top {\n      display: block;\n    }\n  }\n`;\n\nexport const CivicDays = () => {\n  return (\n    <>\n      <CivicDaysSection className=\"civic-days-section\">\n        <div className=\"placeholder-container\" />\n        <Section>\n          <div className=\"heading-border-top\"></div>\n          <SectionHeading addCSS={fs44}>Civic Days</SectionHeading>\n          <div className=\"heading-border-bottom\"></div>\n          <p className=\"section-text\">\n            Our bandhus come together for a week to co-live and co-work and co-create. Check out how we do this CDL\n            style\n          </p>\n        </Section>\n      </CivicDaysSection>\n      <HorizontalImageScrollContainer>\n        {[1, 1, 1, 11, 1, 1, 1].map((item, index) => {\n          return <div key={index}></div>;\n        })}\n      </HorizontalImageScrollContainer>\n    </>\n  );\n};\n\nconst Team = ({ data }) => {\n  const members = data.allMarkdownRemark.nodes;\n\n  const membersContainerRef = React.useRef(null);\n  const stickyBoxRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const scrollHandler = () => {\n      if (window.innerWidth >= 1280) {\n        if (membersContainerRef && window.scrollY > membersContainerRef.current.scrollHeight / 2 + 200) {\n          stickyBoxRef.current.style.top = '90%';\n          stickyBoxRef.current.style.bottom = '0px';\n          stickyBoxRef.current.style.left = '0px';\n        } else {\n          stickyBoxRef.current.style.top = `calc(10%)`;\n          stickyBoxRef.current.style.bottom = '80%';\n        }\n      }\n    };\n\n    window.addEventListener('scroll', scrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n\n  return (\n    <Layout>\n      <Seo title=\"Team\" />\n      <MainGrid>\n        <TitleContainer>\n          <SectionHeading>The Team</SectionHeading>\n          <div className=\"heading-border-bottom\"></div>\n          <p className=\"section-text\">Meet our Bandhus</p>\n          <div style={{ position: 'relative', height: '80%' }}>\n            <StickyBox ref={stickyBoxRef}>\n              <h1>Current Job Openings</h1>\n              <Link to=\"/openings\">browse jobs</Link>\n            </StickyBox>\n          </div>\n        </TitleContainer>\n        <MemberCardsContainer ref={membersContainerRef}>\n          {members.map((member) => (\n            <MemberImageBox\n              key={member.fields.slug}\n              link={member.fields.slug}\n              name={member.frontmatter.name}\n              role={member.frontmatter.role.split(',')[0]}\n              image={member.frontmatter.image?.childImageSharp.fluid}\n            />\n          ))}\n        </MemberCardsContainer>\n      </MainGrid>\n      <div style={{ position: 'relative' }}>\n        <StickyBox mobile>\n          <h1>Current Job Openings</h1>\n          <Link to=\"/openings\">browse jobs</Link>\n        </StickyBox>\n      </div>\n      <CivicDays />\n    </Layout>\n  );\n};\n\nexport default Team;\n\nexport const pageQuery = graphql`\n  query TeamQuery {\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/team/\" } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          role\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}