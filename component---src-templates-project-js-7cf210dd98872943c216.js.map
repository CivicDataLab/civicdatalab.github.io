{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/templates/project.js","webpack:///./src/pages/work.js","webpack:///./src/components/SectorNav.js"],"names":["ImageItemContainer","styled","Link","props","boldtext","SectorLabel","p","color","sectors","name","sectorLabelColorGenerator","sectorName","find","sector","ImageItem","url","image","text","boldText","toString","to","fluid","ProjectTitleContainer","TitleContainer","ProjectContent","div","ImageSection","SummaryText","ProjectText","LeftText","mobile","SocialLinksContainer","PartnersContainer","ProjectTemplate","data","project","markdownRemark","members","nodes","partners","frontmatter","twitter","linkedin","github","youtube","facebook","solution","aim","resources","newsletter","leftContainerRef","React","useRef","rightContainerRef","useFixedScroll","title","ref","target","rel","href","className","length","map","partner","key","id","website","fixed","logo","childImageSharp","summary","context","markdown","dangerouslySetInnerHTML","__html","html","ProjectsContent","ProjectsContainer","Sectors","projects","allMarkdownRemark","fields","slug","SectorNavItem","SectorNavContainer","SectorNav","sectorsData","useStaticQuery","edges","activeClassName","node"],"mappings":"8FAAA,sEAKMA,EAAqBC,YAAOC,KAAV,oFAAGD,CAAH,gSAeL,SAACE,GAAD,OAAYA,EAAMC,SAAW,MAAQ,YAiBlDC,EAAcJ,IAAOK,EAAV,6EAAGL,CAAH,iLAGK,SAACE,GAAD,OAAYA,EAAMI,MAAQJ,EAAMI,MAAQ,aAYxDC,EAAU,CACd,CAAEC,KAAM,uBAAwBF,MAAO,WACvC,CAAEE,KAAM,gBAAiBF,MAAO,WAChC,CAAEE,KAAM,iBAAkBF,MAAO,WACjC,CAAEE,KAAM,oBAAqBF,MAAO,WACpC,CAAEE,KAAM,mBAAoBF,MAAO,YAG/BG,EAA4B,SAACC,GAAgB,IAAD,EAChD,iBAAOH,EAAQI,MAAK,SAACC,GAAD,OAAYA,EAAOJ,OAASE,YAAhD,aAAO,EAAsDJ,OAYhDO,IATG,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMN,EAA2B,EAA3BA,WAAYO,EAAe,EAAfA,SACjD,OACE,kBAAClB,EAAD,CAAoBI,SAAUc,EAASC,WAAYC,GAAIL,GAAO,KAC3DJ,EAAa,kBAACN,EAAD,CAAaE,MAAOG,EAA0BC,IAAcA,GAA4B,KACrGK,EAAQ,kBAAC,IAAD,CAAOK,MAAOL,IAAY,8BAAQ,IAAC,2BAAIC,M,kCCpEtD,qMAmBMK,EAAwBrB,YAAOsB,kBAAV,qFAAGtB,CAAH,uLAmBrBuB,EAAiBvB,IAAOwB,IAAV,8EAAGxB,CAAH,iPAsBdyB,EAAezB,IAAOwB,IAAV,4EAAGxB,CAAH,mIAcZ0B,EAAc1B,IAAOwB,IAAV,2EAAGxB,CAAH,iGAUX2B,EAAc3B,IAAOwB,IAAV,2EAAGxB,CAAH,wTAuCX4B,EAAW5B,IAAOwB,IAAV,wEAAGxB,CAAH,wgBAED,SAACE,GAAD,OAAYA,EAAM2B,OAAS,SAAW,OACtC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,QAAU,UAClC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,SAAW,UAiCvC,SAAC3B,GAAD,OAAYA,EAAM2B,OAAS,OAAS,WAiB7CC,EAAuB9B,IAAOwB,IAAV,oFAAGxB,CAAH,mSAGL,SAACE,GAAD,OAAYA,EAAM2B,OAAS,SAAW,WAqBrDE,EAAoB/B,IAAOwB,IAAV,iFAAGxB,CAAH,qFAoORgC,UAxLS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAUD,EAAKE,eACfC,EAAUH,EAAKG,QAAQC,MACvBC,EAAWL,EAAKK,SAASD,MAHK,EAgBhCH,EAAQK,YAVVC,EANkC,EAMlCA,QACAC,EAPkC,EAOlCA,SACAC,EARkC,EAQlCA,OACAC,EATkC,EASlCA,QACAC,EAVkC,EAUlCA,SACA9B,EAXkC,EAWlCA,IACA+B,EAZkC,EAYlCA,SACAC,EAbkC,EAalCA,IACAC,EAdkC,EAclCA,UACAC,EAfkC,EAelCA,WAGIC,EAAmBC,IAAMC,OAAO,MAChCC,EAAoBF,IAAMC,OAAO,MAIvC,OAFAE,YAAeJ,EAAkBG,EAAmB,KAGlD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAOpB,EAAQK,YAAY/B,OAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACa,EAAD,CAAuBkC,IAAKN,GAC1B,kBAAC,IAAD,KAAWf,EAAQK,YAAY/B,MAE/B,kBAACoB,EAAD,KACGd,GACC,oCACE,2BAAG,wBACH,uBAAG0C,OAAO,SAASC,IAAI,sBAAsBC,KAAM5C,GAChDA,IAIP,kBAACgB,EAAD,KACGU,GACC,uBAAGkB,KAAMlB,EAASgB,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,OAGHhB,GACC,uBAAGiB,KAAMjB,EAAUe,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHb,GACC,uBAAGc,KAAMd,EAAUY,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHf,GACC,uBAAGgB,KAAMhB,EAAQc,OAAO,SAASC,IAAI,uBACnC,kBAAC,IAAD,OAGHd,GACC,uBAAGe,KAAMf,EAASa,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,SAMPT,GACC,kBAACpB,EAAD,KACE,2BAAG,gCACH,uBAAG+B,UAAU,iBAAiBD,KAAMV,GAAY,cAMnDV,EAASsB,OACR,kBAAChC,EAAD,KACE,2BAAG,wBACH,kBAACG,EAAD,KACGO,EAASuB,KAAI,SAACC,GAAD,OACZ,uBAAGC,IAAKD,EAAQE,GAAIN,KAAMI,EAAQvB,YAAY0B,QAAST,OAAO,SAASC,IAAI,uBACzE,kBAAC,IAAD,CAAOS,MAAOJ,EAAQvB,YAAY4B,KAAKC,gBAAgBF,cAK7D,MAEN,kBAAC3C,EAAD,CAAgBgC,IAAKH,GACnB,kBAAC3B,EAAD,KACE,kBAAC,IAAD,CAAOL,MAAOc,EAAQK,YAAYxB,MAAMqD,gBAAgBhD,QACxD,kBAACM,EAAD,KAAcQ,EAAQK,YAAY8B,UAEpC,kBAAC1C,EAAD,KACE,2BAAG,YACFO,EAAQK,YAAY+B,QACnB,kBAAC,IAAD,CAAcC,SAAUrC,EAAQK,YAAY+B,UAE5C,yBAAKE,wBAAyB,CAAEC,OAAQvC,EAAQwC,SAGnD5B,GACC,kBAACnB,EAAD,KACE,2BAAG,QACH,kBAAC,IAAD,CAAc4C,SAAUzB,KAG3BD,GACC,kBAAClB,EAAD,KACE,2BAAG,iBACH,kBAAC,IAAD,CAAc4C,SAAU1B,KAI5B,kBAACjB,EAAD,CAAUC,QAAM,GACd,2BAAG,wBACH,uBAAG2B,OAAO,SAASC,IAAI,sBAAsBC,KAAI,WAAa5C,GAC3DA,GAEH,kBAACgB,EAAD,CAAsBD,QAAM,GACzBW,GACC,uBAAGkB,KAAMlB,EAASgB,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,OAGHhB,GACC,uBAAGiB,KAAMjB,EAAUe,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHb,GACC,uBAAGc,KAAMd,EAAUY,OAAO,SAASC,IAAI,uBACrC,kBAAC,IAAD,OAGHf,GACC,uBAAGgB,KAAMhB,EAAQc,OAAO,SAASC,IAAI,uBACnC,kBAAC,IAAD,OAGHd,GACC,uBAAGe,KAAMf,EAASa,OAAO,SAASC,IAAI,uBACpC,kBAAC,IAAD,SAKPnB,GACC,kBAACV,EAAD,CAAUC,QAAM,GACd,2BAAG,wBACH,kBAACE,EAAD,KACGO,EAASuB,KAAI,SAACC,GAAD,OACZ,uBAAGC,IAAKD,EAAQE,GAAIN,KAAMI,EAAQvB,YAAY0B,QAAST,OAAO,SAASC,IAAI,uBACzE,kBAAC,IAAD,CAAOS,MAAOJ,EAAQvB,YAAY4B,KAAKC,gBAAgBF,iBAgBvE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC3C,EAAD,KACE,kBAAC,IAAD,CAAiBa,QAASA,IACzBW,GAAa,kBAAC,IAAD,CAAWA,UAAWA,U,kCCrahD,ySAaazB,EAAiBtB,IAAOwB,IAAV,2EAAGxB,CAAH,gUAgCd2E,EAAkB3E,IAAOwB,IAAV,4EAAGxB,CAAH,2JAcf4E,EAAoB5E,IAAOwB,IAAV,8EAAGxB,CAAH,6PA6Df6E,UAtCC,SAAC,GAAc,IACvBC,EADsB,EAAX7C,KACK8C,kBAAkB1C,MAElCY,EAAmBC,IAAMC,OAAO,MAChCC,EAAoBF,IAAMC,OAAO,MAIvC,OAFAE,YAAeJ,EAAkBG,GAG/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,aACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAChC,EAAD,CAAgBiC,IAAKN,GACnB,kBAAC,IAAD,KAAU,YACV,kBAAC,IAAD,OAEF,kBAAC0B,EAAD,CAAiBpB,IAAKH,GACpB,kBAAC,IAAD,MACA,kBAACwB,EAAD,KACGE,EAASjB,KAAI,SAAC3B,GAAD,OACZ,kBAAC,IAAD,CACE6B,IAAK7B,EAAQ8B,GACblD,IAAKoB,EAAQ8C,OAAOC,KACpBlE,MAAOmB,EAAQK,YAAYxB,MAAMqD,gBAAgBhD,MACjDJ,KAAMkB,EAAQK,YAAY/B,KAC1BE,WAAYwB,EAAQK,YAAY3B,OAChCK,UAAQ,c,kCC7G1B,iDAIMiE,EAAgBlF,YAAOC,KAAV,+EAAGD,CAAH,yfAsCbmF,EAAqBnF,IAAOwB,IAAV,oFAAGxB,CAAH,wUAgEToF,IAnCG,WAChB,IAkBMC,EAlBOC,YAAe,cAkBHP,kBAAkBQ,MAE3C,OACE,kBAACJ,EAAD,KACE,kBAACD,EAAD,CAAeM,gBAAgB,gBAAgBrE,GAAG,SAAQ,OAGzDkE,EAAYxB,KAAI,SAACjD,GAAD,OACf,kBAACsE,EAAD,CAAeM,gBAAgB,gBAAgBzB,IAAKnD,EAAO6E,KAAKzB,GAAI7C,GAAIP,EAAO6E,KAAKT,OAAOC,MACvD,yBAAjCrE,EAAO6E,KAAKlD,YAAY/B,KAAkC,MAAQI,EAAO6E,KAAKlD,YAAY/B","file":"component---src-templates-project-js-7cf210dd98872943c216.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst sectors = [\n  { name: 'Digital Public Goods', color: '#74719e' },\n  { name: 'Law & Justice', color: '#ed7263' },\n  { name: 'Public Finance', color: '#c2d7ea' },\n  { name: 'Urban Development', color: '#dfc481' },\n  { name: 'Open Contracting', color: '#e8ded4' }\n];\n\nconst sectorLabelColorGenerator = (sectorName) => {\n  return sectors.find((sector) => sector.name === sectorName)?.color;\n};\n\nconst ImageItem = ({ url, image, text, sectorName, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText.toString()} to={url || '/'}>\n      {sectorName ? <SectorLabel color={sectorLabelColorGenerator(sectorName)}>{sectorName}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaYoutube, FaFacebook } from 'react-icons/fa';\n// import Carousel from 'react-multi-carousel';\n// import 'react-multi-carousel/lib/styles.css';\nimport Layout from '../components/Layout/Layout';\nimport HeroText from '../styles/HeroText';\nimport { TitleContainer } from '../pages/work';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\n// import Timeline from '../components/Timeline';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\nimport Resources from '../components/Resources';\nimport MarkdownView from 'react-showdown';\n\nconst ProjectTitleContainer = styled(TitleContainer)`\n  @media (min-width: 1280px) {\n    h1 {\n      overflow-wrap: break-word;\n      font-size: 45px;\n      line-height: 1em;\n      width: 380px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    h1 {\n      font-size: 45px;\n      font-weight: 1em;\n      min-width: 350px;\n    }\n  }\n`;\n\nconst ProjectContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 5/13;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1920px) {\n    grid-column: 4/13;\n  }\n`;\n\nconst ImageSection = styled.div`\n  position: relative;\n\n  .gatsby-image-wrapper {\n    max-height: 400px;\n  }\n\n  @media (min-width: 1280px) {\n    .gatsby-image-wrapper {\n      max-height: 750px;\n    }\n  }\n`;\n\nconst SummaryText = styled.div`\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-top: 24px;\n\n  @media (min-width: 1280px) {\n    font-size: 2rem;\n  }\n`;\n\nconst ProjectText = styled.div`\n  padding: 0;\n  margin-bottom: 32px;\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  > p {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  > div p {\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin: 40px 0;\n  }\n\n  @media (min-width: 1440px) {\n    width: 50%;\n\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst LeftText = styled.div`\n  margin: 30px 0;\n  padding: ${(props) => (props.mobile ? '0 32px' : '0')};\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  text-align: ${(props) => (props.mobile ? 'center' : 'left')};\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  p:first-of-type {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  p:last-of-type {\n    margin-top: 8px;\n  }\n\n  .btn-newsletter {\n    margin-top: 12px;\n    padding: 12px 18px;\n    background-color: #1dcccc;\n    color: black;\n    font-weight: 500;\n    border-radius: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    padding: 0;\n    margin: 36px 0;\n\n    a {\n      max-width: 250px;\n      word-wrap: break-word;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst SocialLinksContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  justify-content: ${(props) => (props.mobile ? 'center' : 'start')};\n\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background-color: black;\n    width: 45px;\n    height: 45px;\n    border-radius: 100%;\n    color: white;\n    margin-right: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst PartnersContainer = styled.div`\n  a {\n    display: block;\n    margin-top: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-bottom: 60px;\n  }\n`;\n\n// const StyledCarousel = styled(Carousel)`\n//   li > div {\n//     max-height: 300px;\n//   }\n\n//   @media (min-width: 1024px) {\n//     li > div {\n//       max-height: 600px;\n//       margin-left: 4px;\n//       margin-right: 4px;\n//     }\n//   }\n// `;\n\n// const responsive = {\n//   superLargeDesktop: {\n//     breakpoint: { max: 4000, min: 3000 },\n//     items: 5\n//   },\n//   desktop: {\n//     breakpoint: { max: 3000, min: 1024 },\n//     items: 3\n//   },\n//   tablet: {\n//     breakpoint: { max: 1024, min: 464 },\n//     items: 2\n//   },\n//   mobile: {\n//     breakpoint: { max: 464, min: 0 },\n//     items: 1\n//   }\n// };\n\nconst ProjectTemplate = ({ data }) => {\n  const project = data.markdownRemark;\n  const members = data.members.nodes;\n  const partners = data.partners.nodes;\n\n  const {\n    twitter,\n    linkedin,\n    github,\n    youtube,\n    facebook,\n    url,\n    solution,\n    aim,\n    resources,\n    newsletter\n  } = project.frontmatter;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef, 750);\n\n  return (\n    <Layout>\n      <Seo title={project.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <ProjectTitleContainer ref={leftContainerRef}>\n            <HeroText>{project.frontmatter.name}</HeroText>\n\n            <LeftText>\n              {url && (\n                <>\n                  <p>Check our work here:</p>\n                  <a target=\"_blank\" rel=\"noreferrer noopener\" href={url}>\n                    {url}\n                  </a>\n                </>\n              )}\n              <SocialLinksContainer>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n\n            {newsletter && (\n              <LeftText>\n                <p>Subscribe to our newsletter:</p>\n                <a className=\"btn-newsletter\" href={newsletter}>\n                  Subscribe\n                </a>\n              </LeftText>\n            )}\n\n            {partners.length ? (\n              <LeftText>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            ) : null}\n          </ProjectTitleContainer>\n          <ProjectContent ref={rightContainerRef}>\n            <ImageSection>\n              <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n              <SummaryText>{project.frontmatter.summary}</SummaryText>\n            </ImageSection>\n            <ProjectText>\n              <p>Context:</p>\n              {project.frontmatter.context ? (\n                <MarkdownView markdown={project.frontmatter.context} />\n              ) : (\n                <div dangerouslySetInnerHTML={{ __html: project.html }} />\n              )}\n            </ProjectText>\n            {aim && (\n              <ProjectText>\n                <p>Aim:</p>\n                <MarkdownView markdown={aim} />\n              </ProjectText>\n            )}\n            {solution && (\n              <ProjectText>\n                <p>Our solution:</p>\n                <MarkdownView markdown={solution} />\n              </ProjectText>\n            )}\n\n            <LeftText mobile>\n              <p>Check our work here:</p>\n              <a target=\"_blank\" rel=\"noreferrer noopener\" href={`https://${url}`}>\n                {url}\n              </a>\n              <SocialLinksContainer mobile>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n            {partners && (\n              <LeftText mobile>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            )}\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n      {/* {project.frontmatter.timeline && <Timeline timelineItems={project.frontmatter.timeline} />} */}\n      {/* <StyledCarousel responsive={responsive}>\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n      </StyledCarousel> */}\n      <MainContainer>\n        <StandardGrid>\n          <ProjectContent>\n            <MiniTeamSection members={members} />\n            {resources && <Resources resources={resources} />}\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n  query ProjectQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        name\n        summary\n        context\n        aim\n        solution\n        url\n        github\n        twitter\n        linkedin\n        youtube\n        facebook\n        newsletter\n        resources {\n          link\n          title\n          type\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1200, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    partners: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projectpart/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          name\n          website\n          logo {\n            childImageSharp {\n              fixed(width: 110) {\n                ...GatsbyImageSharpFixed_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\nimport { SocialLinks } from '../components/Contact';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// add social links below our link\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Work</HeroText>\n            <SocialLinks />\n          </TitleContainer>\n          <ProjectsContent ref={rightContainerRef}>\n            <SectorNav />\n            <ProjectsContainer>\n              {projects.map((project) => (\n                <ImageItem\n                  key={project.id}\n                  url={project.fields.slug}\n                  image={project.frontmatter.image.childImageSharp.fluid}\n                  text={project.frontmatter.name}\n                  sectorName={project.frontmatter.sector}\n                  boldText\n                />\n              ))}\n            </ProjectsContainer>\n          </ProjectsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name === 'Digital Public Goods' ? 'DPG' : sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n"],"sourceRoot":""}