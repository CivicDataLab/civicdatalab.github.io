{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/styles/HeroText.js","webpack:///./src/pages/work.js","webpack:///./src/components/SectorNav.js","webpack:///./src/hooks/useFixedScroll.js","webpack:///./src/styles/StandardGrid.js"],"names":["ImageItemContainer","styled","Link","props","boldtext","SectorLabel","p","color","sectors","name","sectorLabelColorGenerator","sectorName","find","sector","ImageItem","url","image","text","boldText","toString","to","fluid","HeroText","h1","light","TitleContainer","div","ProjectsContent","ProjectsContainer","Sectors","projects","data","allMarkdownRemark","nodes","leftContainerRef","React","useRef","rightContainerRef","useFixedScroll","title","ref","map","project","key","id","fields","slug","frontmatter","childImageSharp","SectorNavItem","SectorNavContainer","SectorNav","sectorsData","useStaticQuery","edges","activeClassName","node","leftRef","rightRef","useEffect","scrollHandler","window","innerWidth","scrollY","current","scrollHeight","style","position","addEventListener","removeEventListener","StandardGrid"],"mappings":"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","file":"component---src-pages-work-js-ab7e0d54a4c40f11aa14.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst sectors = [\n  { name: 'Education', color: '#E56997' },\n  { name: 'Free & Open Source Software', color: '#129530' },\n  { name: 'Law & Justice', color: '#FBC740' },\n  { name: 'Public Finance', color: '#66D2D6' },\n  { name: 'Urban Planning', color: '#BD97CB' }\n];\n\nconst sectorLabelColorGenerator = (sectorName) => {\n  return sectors.find((sector) => sector.name === sectorName).color;\n};\n\nconst ImageItem = ({ url, image, text, sectorName, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText.toString()} to={url || '/'}>\n      {sectorName ? <SectorLabel color={sectorLabelColorGenerator(sectorName)}>{sectorName}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import styled from 'styled-components';\n\nconst HeroText = styled.h1`\n  font-family: 'Bungee', cursive;\n  font-size: 32px;\n  line-height: 32px;\n  color: ${(props) => (props.light ? 'white' : 'black')};\n  text-transform: uppercase;\n  margin: 0;\n  text-align: left;\n  width: min-content;\n\n  @media (min-width: 1024px) {\n    font-size: 60px;\n    line-height: 60px;\n  }\n`;\n\nexport default HeroText;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Work</HeroText>\n          </TitleContainer>\n          <ProjectsContent ref={rightContainerRef}>\n            <SectorNav />\n            <ProjectsContainer>\n              {projects.map((project) => (\n                <ImageItem\n                  key={project.id}\n                  url={project.fields.slug}\n                  image={project.frontmatter.image.childImageSharp.fluid}\n                  text={project.frontmatter.name}\n                  sectorName={project.frontmatter.sector}\n                  boldText\n                />\n              ))}\n            </ProjectsContainer>\n          </ProjectsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work/\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name === 'Free & Open Source Software' ? 'FOSS' : sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n","import { useEffect } from 'react';\n\nexport default function useFixedScroll(leftRef, rightRef) {\n  useEffect(() => {\n    function scrollHandler() {\n      if (window.innerWidth >= 1280) {\n        if (rightRef && window.scrollY > rightRef.current.scrollHeight / 2 + 100) {\n          leftRef.current.style.position = 'static';\n        } else {\n          leftRef.current.style.position = 'fixed';\n        }\n      }\n    }\n\n    window.addEventListener('scroll', scrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n    };\n  }, [leftRef, rightRef]);\n}\n","import styled from 'styled-components';\n\nconst StandardGrid = styled.div`\n  display: grid;\n  row-gap: 30px;\n\n  @media (min-width: 1280px) {\n    grid-template-columns: repeat(12, 1fr);\n    column-gap: 25px;\n  }\n\n  @media (min-width: 1440px) {\n    column-gap: 30px;\n    row-gap: 36px;\n  }\n\n  @media (min-width: 1920px) {\n    column-gap: 45px;\n    row-gap: 54px;\n  }\n`;\n\nexport default StandardGrid;\n"],"sourceRoot":""}