{"version":3,"sources":["webpack:///./src/images/partner-icon.png","webpack:///./src/components/EventNav.js","webpack:///./src/images/cdl_logo.png","webpack:///./src/images/join-icon.png","webpack:///./src/pages/events.js","webpack:///./src/styles/WorkHomePage.js","webpack:///./src/components/WorkHomePage.js","webpack:///./src/templates/event.js","webpack:///./src/components/ImageEventItem.js"],"names":["module","exports","EventNavItem","styled","Link","withConfig","displayName","componentId","EventNavContainer","div","EventNav","eventdata","useStaticQuery","allMarkdownRemark","edges","React","createElement","activeClassName","to","map","event","key","node","id","fields","slug","frontmatter","name","TitleContainer","EventsContent","EventsContainer","Events","_ref","data","events","nodes","leftContainerRef","useRef","rightContainerRef","useFixedScroll","Layout","Seo","title","MainContainer","StandardGrid","ref","HeroText","SocialLinks","ImageEventItem","url","image","childImageSharp","fluid","text","eventName","eventtype","boldText","WorkHomePage","BackgroundImage","file","WorkHomePageStyle","className","light","src","require","alt","href","target","rel","EventInfo","EventLabel","props","color","EventTemplate","markdownRemark","description","ImageEventContainer","boldtext","span","IconBackground","iconImg","fileImg","sectors","sectorLabelColorGenerator","_sectors$find","find","sector","ImageEvent","openInNewTab","toString","Image"],"mappings":"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","file":"component---src-templates-event-js-af56a0f039f7974f85db.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/partner-icon-7554ca9e65c9657c0c7a6fa0c31b58e5.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst EventNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst EventNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-event {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst EventNav = () => {\n  const data = useStaticQuery(graphql`\n    query EventNavQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"eventtype\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const eventdata = data.allMarkdownRemark.edges;\n\n  return (\n    <EventNavContainer>\n      <EventNavItem activeClassName=\"active-event\" to=\"/events\">\n        All\n      </EventNavItem>\n      {eventdata.map((event) => (\n        <EventNavItem activeClassName=\"active-event\" key={event.node.id} to={event.node.fields.slug}>\n          { event.node.frontmatter.name}\n        </EventNavItem>\n      ))}\n    </EventNavContainer>\n  );\n};\n\nexport default EventNav;\n","module.exports = __webpack_public_path__ + \"static/cdl_logo-cc1a1e0ae54e2c5c024f5c231782ca6c.png\";","module.exports = __webpack_public_path__ + \"static/join-icon-878317927344d62e39d89d5ca4b1683f.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport EventNav from '../components/EventNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageEventItem from '../components/ImageEventItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\nimport { SocialLinks } from '../components/Contact';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const EventsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n  min-height: 90vh;\n  align-items: start;\n  align-content: start;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const EventsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\nconst Events = ({ data }) => {\n  const events = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Event\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Events</HeroText>\n            <SocialLinks />\n          </TitleContainer>\n          <EventsContent ref={rightContainerRef}>\n            <EventNav />\n            <EventsContainer>\n              {events.map((event) => (\n                <ImageEventItem\n                  key={event.id}\n                  url={event.fields.slug}\n                  image={event.frontmatter.image.childImageSharp.fluid}\n                  text={event.frontmatter.name}\n                  eventName={event.frontmatter.eventtype}\n                  boldText\n                />\n              ))}\n            </EventsContainer>\n          </EventsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Events;\n\n\nexport const pageQuery = graphql`\n  query EventCompQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"eventdetail\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          eventtype\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nconst WorkHomePage = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  padding: 40px 0;\n\n  .sub-text {\n    width: 100%;\n  }\n\n  hr {\n    border: 8px solid #FFF;\n    border-radius: 12px;\n    width: 58px;\n    margin-left: 0px;\n    margin-top: 18px;\n  }\n\n  .content {\n    margin-bottom: 20px;\n  }\n\n  .first-text-block {\n    text-align: left;\n    font-size: 18px;\n    line-height: 1.4em;\n    font-family: Montserrat;\n    margin-top: 16px;\n    padding-left: 0px;\n  }\n\n  .circle-wrapper {\n    display: grid;\n    margin-top: 80px;\n  }\n\n  .circle {\n    height: 159px;\n    width: 159px;\n    background-color: #ffffff;\n    border-radius: 50%;\n    margin-bottom: 14px;\n    box-shadow: 0px 10px 30px #A2CAFD3C;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    img {\n      width: 100%;\n      height: auto;\n    }\n  }\n\n  .below-text {\n    text-align: left;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 31px;\n    font-family: Montserrat;\n    letter-spacing: 0px;\n    color: #ffffff;\n    width: 100%;\n    text-decoration: none;\n  }\n\n  p {\n    padding-left: 22px;\n    padding-right: 21px;\n    padding-top: 4px;\n    padding-bottom: 5px;\n    display: flex;\n    justify-content: center;\n    margin: 0;\n  }\n\n  .content-circle {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    row-gap: 10px;\n    color: white;\n    text-decoration: none;\n\n    &:hover {\n      .circle {\n        box-shadow: 0px 10px 60px #A2CAFD3C;\n      }\n    }\n  }\n\n  #first-circle {\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: 550px) {\n    .circle-wrapper {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media (min-width: 900px) {\n    padding-top: 40px;\n    padding-bottom: 40px;\n    max-width: 100%;\n    .container-work-section {\n      display: flex;\n    }\n    \n    .circle {\n      margin-bottom: 24px;\n      width: 240px;\n      height: 240px;\n\n      img {\n        width: 240px;\n        height: 240px;\n      }\n    }\n  }\n\n  @media(min-width: 1280px) {\n    flex-direction: row;\n    padding: 100px 0px;\n    margin-bottom: 60px;\n\n    .first-text-block {\n      width: 60%;\n    }\n\n    .circle-wrapper {\n      margin-top: 0;\n      grid-template-columns: 360px 360px;\n      justify-items: start;\n      width: 50%;\n\n    }\n  }\n\n  @media (min-width: 1440px) {\n    padding: 150px 0px;\n    margin-bottom: 80px;\n\n    .sub-text {\n      font-size: 60px;\n      line-height: 60px;\n    }\n\n    .circle {\n      width: 260px;\n      height: 260px;\n    }\n\n    .below-text {\n      font-size: 20px;\n    }\n\n    .first-text-block {\n      font-size: 18px;\n      line-height: 27px;\n      width: 40%;\n    }\n    .work-home-page {\n      width: 94px;\n      margin-top: 40px;\n      margin-bottom: 40px;\n    }\n  }\n`;\n\nexport default WorkHomePage;\n","import React from 'react';\nimport WorkHomePageStyle from '../styles/WorkHomePage';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\nimport BackgroundImage from 'gatsby-background-image';\nimport HeroText from '../styles/HeroText';\nimport MainContainer from '../styles/MainContainer';\n\nconst WorkHomePage = () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        file(relativePath: { eq: \"pattern.png\" }) {\n          childImageSharp {\n            fluid(maxWidth: 2000, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `\n  );\n\n  return (\n    <BackgroundImage fluid={data.file.childImageSharp.fluid}>\n      <MainContainer>\n        <WorkHomePageStyle>\n          <div className={'content'}>\n            <HeroText light className={'work-part'}>\n              Work{' '}\n            </HeroText>\n            <HeroText light className={'sub-text'}>\n              {' '}\n              With Us!\n            </HeroText>\n            <hr className={'work-home-page'}></hr>\n            <p className={'first-text-block'}>\n              Let’s co-create the next solution enabling sustainable social change in your area of work\n            </p>\n          </div>\n          <div className={'circle-wrapper'}>\n            <Link to=\"/contact\" className={'content-circle'} id=\"first-circle\">\n              <div className={'circle'}>\n                <img src={require('../images/join-icon.png')} alt=\"Join us\" />\n              </div>\n              <div className={'below-text'}>\n                <p>Partner With Us</p>\n              </div>\n            </Link>\n            <a href=\"https://jobs.civicdatalab.in\" target=\"_blank\" rel=\"noreferrer\" className={'content-circle'}>\n              <div className={'circle'}>\n                <img src={require('../images/partner-icon.png')} alt=\"Partner with us\" />\n              </div>\n              <div className={'below-text'}>\n                <p>Join Us</p>\n              </div>\n            </a>\n          </div>\n        </WorkHomePageStyle>\n      </MainContainer>\n    </BackgroundImage>\n  );\n};\n\nexport default WorkHomePage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/Layout/Layout';\nimport { TitleContainer, EventsContainer, EventsContent } from '../pages/events';\nimport EventNav from '../components/EventNav';\nimport HeroText from '../styles/HeroText';\nimport ImageEventItem from '../components/ImageEventItem';\nimport WorkHomePage from '../components/WorkHomePage';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\n\nconst EventInfo = styled.div`\n  a {\n    display: inline-block;\n    color: #1eb0d3;\n    width: 200px;\n  }\n\n  .description {\n    display: none;\n  }\n\n  @media (min-width: 1024px) {\n    a {\n      width: 200px;\n      font-size: 18px;\n      line-height: 27px;\n      margin-top: 20px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    .description {\n      display: block;\n      line-height: 1.5em;\n      margin-top: 50px;\n      width: 250px;\n      font-size: 16px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .description {\n      font-size: 18px;\n    }\n  }\n`;\n\nconst EventLabel = styled.div`\n  display: none;\n  @media (min-width: 1024px) {\n    display: block;\n    background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n    max-width: 180px;\n    padding: 15px 26px;\n    font-size: 25px;\n    font-weight: 500;\n  }\n`;\n\n\nconst EventTemplate = ({ data }) => {\n  const events = data.events.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title={data.markdownRemark.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>\n                Our Event\n            </HeroText>\n            <EventInfo>\n              <EventLabel color={data.markdownRemark.frontmatter.color}>\n                {data.markdownRemark.frontmatter.name}\n              </EventLabel>\n              <p className=\"description\">\n                  {data.markdownRemark.frontmatter.description}\n              </p>\n            </EventInfo>\n          </TitleContainer>\n          <EventsContent ref={rightContainerRef}>\n            <EventNav />\n            <EventsContainer>\n              {events.map((event) => (\n                <ImageEventItem\n                  key={event.id}\n                  url={event.fields.slug}\n                  image={event.frontmatter.image.childImageSharp.fluid}\n                  text={event.frontmatter.name}\n                  eventName={event.frontmatter.eventtype}\n                  boldText\n                />\n              ))}\n            </EventsContainer>\n          </EventsContent>\n        </StandardGrid>\n      </MainContainer>\n      <WorkHomePage />\n    </Layout>\n  );\n};\n\nexport default EventTemplate;\n\nexport const pageQuery = graphql`\n  query EventQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      frontmatter {\n        name\n        description\n        color\n        events {\n          url\n          title\n        }\n      }\n    }\n    events: allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"eventdetail\" }, eventtype: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          eventtype\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\nimport fileImg from '../images/cdl_logo.png';\n\nconst ImageEventContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst EventLabel = styled.span`\n  padding: 4px 10px;\n  color: white !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 60%;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media(max-width:1024px) {\n    top:50%;\n  }\n  @media (min-width: 1280px) {\n    top: 55%;\n  }\n`;\n\nconst IconBackground = styled.div`\n  background-image: ${(props) => (props.iconImg ? `url(${props.iconImg})` : `url(${fileImg})`)};\n  background-size: 60% 60%;\n  background-position: center;\n  background-repeat: no-repeat;\n`;\n\nconst sectors = [\n  { name: 'Digital Public Goods', color: '#74719e' },\n  { name: 'Law & Justice', color: '#4b4140' },\n  { name: 'Public Finance', color: '#525568' },\n  { name: 'Urban Development', color: '#4b4140' },\n  { name: 'Open Contracting', color: '#076775' }\n];\n\nconst sectorLabelColorGenerator = (eventName) => {\n  return sectors.find((sector) => sector.name === eventName)?.color;\n};\n\nconst ImageEvent = ({ url, image, text, eventName, boldText, openInNewTab, iconImg }) => {\n  return (\n    <ImageEventContainer boldtext={boldText.toString()} to={url || '/'} target={openInNewTab ? '_blank' : '_self'}>\n      {eventName ? <EventLabel color={sectorLabelColorGenerator(eventName)}>{eventName}</EventLabel> : null}\n      {image ? <Image fluid={image} /> : iconImg ? <IconBackground iconImg={iconImg} /> : <div />} <p>{text}</p>\n    </ImageEventContainer>\n  );\n};\n\nexport default ImageEvent;\n"],"sourceRoot":""}