{"version":3,"sources":["webpack:///./src/hooks/useMediumFeed.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/BlogCard.js","webpack:///./src/templates/member.js"],"names":["intialState","blogPosts","errorMessage","loading","reducer","state","action","type","payload","useMediumFeed","mediumUserName","dispatch","useReducer","useEffect","async","fetch","CORS_PROXY","then","res","json","response","items","filter","post","indexOf","catch","error","message","fetchData","getCoverImageUrlFromMediumPost","postContent","srcStart","srcEnd","substring","StyledLink","styled","a","withConfig","displayName","componentId","Card","div","BlogCard","_ref","title","imageUrl","postUrl","React","createElement","href","target","rel","src","alt","MemberContainer","MainContainer","PictureContainer","QuoteContainer","props","background","text","Bio","SocialLinksContainer","BlogContainer","BlogPostGrid","MemberDetails","mobile","MemberTemplate","_member$frontmatter$i","_member$frontmatter$d","data","member","markdownRemark","frontmatter","medium","Layout","Seo","name","StandardGrid","role","split","map","index","length","key","twitter","FaTwitter","linkedin","FaLinkedinIn","github","FaGithubAlt","behance","FaBehance","Image","imgStyle","objectFit","objectPosition","maxHeight","fluid","image","childImageSharp","quote","accentcolor","description","d","html","dangerouslySetInnerHTML","__html","guid","link"],"mappings":"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","file":"component---src-templates-member-js-2cb13cc167ff3038de2d.js","sourcesContent":["import { useReducer, useEffect } from 'react';\n\nconst CORS_PROXY = 'https://api.rss2json.com/v1/api.json?rss_url=';\n\nconst intialState = {\n  blogPosts: [],\n  errorMessage: '',\n  loading: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCHING_POSTS':\n      return {\n        blogPosts: [],\n        errorMessage: '',\n        loading: true\n      };\n    case 'FETCHING_POSTS_SUCCESS':\n      return {\n        blogPosts: action.payload,\n        errorMessage: '',\n        loading: false\n      };\n    case 'FETCHING_POSTS_FAILED':\n      return {\n        blogPosts: [],\n        errorMessage: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst useMediumFeed = (mediumUserName) => {\n  const [state, dispatch] = useReducer(reducer, intialState);\n\n  useEffect(() => {\n    async function fetchData() {\n      dispatch({ type: 'FETCHING_POSTS' });\n      await fetch(CORS_PROXY + `https://medium.com/feed/${mediumUserName}`)\n        .then((res) => res.json())\n        .then((response) => {\n          dispatch({\n            type: 'FETCHING_POSTS_SUCCESS',\n            payload: response.items.filter((post) => post['content'].indexOf('CivicDataLab') > -1)\n          });\n        })\n        .catch((error) => {\n          dispatch({ type: 'FETCHING_POSTS_FAILED', payload: error.message });\n        });\n    }\n    fetchData();\n  }, [mediumUserName]);\n\n  return [state.blogPosts, state.error, state.loading];\n};\n\nexport default useMediumFeed;\n","export const getCoverImageUrlFromMediumPost = (postContent) => {\n  const srcIndex = postContent.indexOf('src=');\n  const srcStart = srcIndex + 5;\n  const srcEnd = postContent.substring(srcStart).indexOf('\"') + srcStart;\n  const src = postContent.substring(srcStart, srcEnd);\n  return src;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  color: #535151 !important;\n\n  @media (min-width: 1280px) {\n    grid-column: span 3;\n  }\n`;\n\nconst Card = styled.div`\n  height: 300px;\n  box-shadow: 7px 3px 4px rgba(0, 0, 0, 0.29);\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n`;\n\nconst BlogCard = ({ title, imageUrl, postUrl }) => {\n  return (\n    <StyledLink href={postUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n      <Card>\n        <img src={imageUrl} alt={title} />\n      </Card>\n      <h3>{title}</h3>\n    </StyledLink>\n  );\n};\n\nexport default BlogCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaBehance } from 'react-icons/fa';\nimport BlogCard from '../components/BlogCard';\nimport { getCoverImageUrlFromMediumPost } from '../utils/helpers';\nimport useMediumFeed from '../hooks/useMediumFeed';\nimport Seo from '../components/Seo/Seo';\nimport StandardGrid from '../styles/StandardGrid';\nimport MainContainer from '../styles/MainContainer';\n// import MemberImage from '../components/MemberImage';\n\nconst MemberContainer = styled(MainContainer)`\n  margin-top: 20px;\n\n  @media (min-width: 1280px) {\n    margin-top: 80px;\n  }\n`;\n\nconst PictureContainer = styled.div`\n  box-sizing: border-box;\n\n  .gatsby-image-wrapper {\n    height: 400px;\n    margin: auto;\n  }\n\n  @media (min-width: 1024px) {\n    .gatsby-image-wrapper {\n      height: 500px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/6;\n    .gatsby-image-wrapper {\n      height: 600px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    .gatsby-image-wrapper {\n      height: 700px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    .gatsby-image-wrapper {\n      height: 900px;\n    }\n  }\n`;\n\nexport const QuoteContainer = styled.div`\n  background-color: ${(props) => (props.background ? props.background : '#1DCCCC')};\n  color: ${(props) => (props.text ? 'white' : 'black')};\n  z-index: -1;\n  padding: 40px 0;\n\n  p {\n    line-height: 28px;\n    font-weight: 300;\n    font-style: italic;\n    position: relative;\n    width: 80%;\n    margin: 0 auto;\n\n    span {\n      display: inline-block;\n    }\n\n    span:first-of-type,\n    span:last-of-type {\n      font-size: 120px;\n      color: rgb(0, 0, 0, 0.26);\n    }\n\n    span:first-of-type {\n      transform: translate(-10px, 20px);\n    }\n\n    span:last-of-type {\n      transform: rotate(-180deg) translate(-80px);\n    }\n  }\n\n  @media (min-width: 1280px) {\n    position: absolute;\n    left: 0;\n    top: 50%;\n    height: 780px;\n    width: 400px;\n\n    p {\n      margin-top: 325px;\n      font-size: 20px;\n      line-height: 1.4em;\n\n      span:first-of-type,\n      span:last-of-type {\n        font-size: 140px;\n      }\n    }\n  }\n\n  @media (min-width: 1440px) {\n    width: 460px;\n    height: 860px;\n    top: 55%;\n\n    p {\n      margin-top: 480px;\n      font-size: 25px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    height: 960px;\n    width: 600px;\n    top: 45%;\n\n    p {\n      margin-top: 700px;\n    }\n  }\n\n  @media (min-width: 2000px) {\n    left: 5%;\n    top: 40%;\n    height: 900px;\n\n    p {\n      margin-top: 650px;\n    }\n  }\n`;\n\nexport const Bio = styled.div`\n  box-sizing: border-box;\n  margin-bottom: 80px;\n\n  p {\n    margin: 18px 0;\n    line-height: 28px;\n  }\n\n  a {\n    color: #168cd6;\n\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-word;\n  }\n\n  li {\n    line-height: 28px;\n  }\n\n  @media (min-width: 1024px) {\n    min-height: 500px;\n    p {\n      font-size: 18px;\n      line-height: 27px;\n      margin: 44px 0;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 6/12;\n    min-height: 1000px;\n  }\n\n  @media (min-width: 1440px) {\n    min-height: 1180px;\n  }\n\n  @media (min-width: 1920px) {\n    min-height: 1280px;\n  }\n`;\n\nexport const SocialLinksContainer = styled.div`\n  display: none;\n\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 25px;\n\n    a {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-decoration: none;\n      background-color: black;\n      width: 45px;\n      height: 45px;\n      border-radius: 100%;\n      color: white;\n      margin-left: 8px;\n    }\n\n    a > * {\n      width: 50%;\n      height: 50%;\n    }\n  }\n`;\n\nconst BlogContainer = styled.div`\n  box-sizing: border-box;\n  margin-top: 80px;\n  margin-bottom: 20px;\n\n  > h2 {\n    display: inline-block;\n    text-transform: uppercase;\n    font-weight: bold;\n    margin-bottom: 40px;\n  }\n\n  @media (min-width: 1024px) {\n    > h2 {\n      font-size: 40px;\n    }\n  }\n`;\n\nconst BlogPostGrid = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: 1fr;\n  column-gap: 25px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: 1fr 1fr;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 6/12;\n    grid-template-columns: repeat(6, 1fr);\n    column-gap: 25px;\n  }\n\n  @media (min-width: 1440px) {\n    column-gap: 30px;\n    row-gap: 45px;\n  }\n\n  @media (min-width: 1920px) {\n    column-gap: 45px;\n  }\n`;\n\nconst MemberDetails = styled.div`\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  h2 {\n    text-transform: uppercase;\n    font-weight: 700;\n    margin-top: 0;\n    margin-bottom: 12px;\n    width: 50%;\n  }\n\n  h5 {\n    font-weight: 700;\n    margin: 3px 0;\n  }\n\n  @media (min-width: 1280px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    h2 {\n      font-size: 50px;\n      margin-bottom: 12px;\n    }\n    h5 {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst MemberTemplate = ({ data }) => {\n  const member = data.markdownRemark;\n  const [blogPosts] = useMediumFeed(member.frontmatter.medium);\n\n  return (\n    <Layout>\n      <Seo title={member.frontmatter.name} />\n      <MemberContainer>\n        <StandardGrid>\n          <MemberDetails mobile>\n            <h2>{member.frontmatter.name}</h2>\n            <h5>\n              {member.frontmatter.role.split(',').map((role, index) => {\n                if (index === member.frontmatter.role.split(',').length - 1) {\n                  return <span key={role}>{role}</span>;\n                }\n                return (\n                  <span key={role}>\n                    {role}\n                    {' - '}\n                  </span>\n                );\n              })}\n            </h5>\n          </MemberDetails>\n          <PictureContainer>\n            <SocialLinksContainer>\n              {member.frontmatter.twitter && (\n                <a href={member.frontmatter.twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaTwitter />\n                </a>\n              )}\n              {member.frontmatter.linkedin && (\n                <a href={member.frontmatter.linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaLinkedinIn />\n                </a>\n              )}\n              {member.frontmatter.github && (\n                <a href={member.frontmatter.github} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaGithubAlt />\n                </a>\n              )}\n              {member.frontmatter.behance && (\n                <a href={member.frontmatter.behance} target=\"_blank\" rel=\"noreferrer noopener\">\n                  <FaBehance />\n                </a>\n              )}\n            </SocialLinksContainer>\n            <Image\n              imgStyle={{\n                objectFit: 'contain',\n                objectPosition: 'top',\n                maxHeight: '600px'\n              }}\n              fluid={member.frontmatter.image?.childImageSharp.fluid}\n            />\n            {member.frontmatter.quote && (\n              <QuoteContainer background={member.frontmatter.accentcolor} text={member.frontmatter.text}>\n                <p>\n                  <span>“</span>\n                  <span>{member.frontmatter.quote}</span>\n                  <span>“</span>\n                </p>\n              </QuoteContainer>\n            )}\n          </PictureContainer>\n          <Bio>\n            <MemberDetails>\n              <h2>{member.frontmatter.name}</h2>\n              <h5>\n                {member.frontmatter.role.split(',').map((role, index) => {\n                  if (index === member.frontmatter.role.split(',').length - 1) {\n                    return <span key={role}>{role}</span>;\n                  }\n                  return (\n                    <span key={role}>\n                      {role}\n                      {' - '}\n                    </span>\n                  );\n                })}\n              </h5>\n            </MemberDetails>\n            {member.frontmatter.description?.split(';').map((d) => (\n              <p key={d}>{d}</p>\n            ))}\n            {member.html && <div dangerouslySetInnerHTML={{ __html: member.html }}></div>}\n            {blogPosts?.length ? (\n              <BlogContainer>\n                <h2>Blogs</h2>\n                <BlogPostGrid>\n                  {blogPosts.map((post) => {\n                    return (\n                      <BlogCard\n                        key={post.guid}\n                        title={post.title}\n                        imageUrl={getCoverImageUrlFromMediumPost(post['content'])}\n                        postUrl={post.link}\n                      />\n                    );\n                  })}\n                </BlogPostGrid>\n              </BlogContainer>\n            ) : null}\n          </Bio>\n        </StandardGrid>\n      </MemberContainer>\n    </Layout>\n  );\n};\n\nexport default MemberTemplate;\n\nexport const pageQuery = graphql`\n  query TeamMemberQuery($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        name\n        role\n        description\n        quote\n        image {\n          childImageSharp {\n            fluid(maxWidth: 800, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        medium\n        github\n        linkedin\n        twitter\n        behance\n        accentcolor\n        text\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}