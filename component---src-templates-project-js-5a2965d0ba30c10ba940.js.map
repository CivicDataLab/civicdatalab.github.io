{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/templates/project.js","webpack:///./src/pages/work.js","webpack:///./src/components/SectorNav.js"],"names":["ImageItemContainer","styled","Link","withConfig","displayName","componentId","props","boldtext","SectorLabel","p","color","sectors","name","sectorLabelColorGenerator","sectorName","_sectors$find","find","sector","ImageItem","_ref","url","image","text","boldText","React","createElement","toString","to","Image","fluid","ProjectTitleContainer","TitleContainer","ProjectContent","div","ImageSection","SummaryText","ProjectText","LeftText","mobile","SocialLinksContainer","PartnersContainer","ProjectTemplate","data","project","markdownRemark","members","nodes","partners","twitter","linkedin","github","youtube","facebook","solution","aim","resources","newsletter","frontmatter","leftContainerRef","useRef","rightContainerRef","useFixedScroll","Layout","Seo","title","MainContainer","StandardGrid","ref","HeroText","Fragment","target","rel","href","FaTwitter","FaLinkedinIn","FaFacebook","FaGithubAlt","FaYoutube","className","length","map","partner","key","id","website","fixed","logo","childImageSharp","summary","context","MarkdownView","markdown","dangerouslySetInnerHTML","__html","html","MiniTeamSection","Resources","ProjectsContent","ProjectsContainer","Sectors","projects","allMarkdownRemark","SocialLinks","SectorNav","fields","slug","SectorNavItem","SectorNavContainer","sectorsData","useStaticQuery","edges","activeClassName","node"],"mappings":"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","file":"component---src-templates-project-js-5a2965d0ba30c10ba940.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Image from 'gatsby-image';\nimport { Link } from 'gatsby';\n\nconst ImageItemContainer = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  text-decoration: none;\n  position: relative;\n\n  div {\n    width: 100%;\n    height: 180px;\n    background-color: #eee;\n  }\n\n  p {\n    color: #585050;\n    font-weight: ${(props) => (props.boldtext ? '700' : 'normal')};\n  }\n\n  @media (min-width: 1024px) {\n    div {\n      height: 270px;\n    }\n  }\n\n  @media (min-width: 1600px) {\n    p {\n      font-size: 18px;\n      line-height: 30px;\n    }\n  }\n`;\n\nconst SectorLabel = styled.p`\n  padding: 4px 10px;\n  color: black !important;\n  background-color: ${(props) => (props.color ? props.color : '#fa7fe7')};\n  position: absolute;\n  z-index: 500;\n  top: 120px;\n  right: 0;\n  font-weight: 500 !important;\n\n  @media (min-width: 1280px) {\n    top: 60%;\n  }\n`;\n\nconst sectors = [\n  { name: 'Digital Public Goods', color: '#74719e' },\n  { name: 'Law & Justice', color: '#4b4140' },\n  { name: 'Public Finance', color: '#525568' },\n  { name: 'Urban Development', color: '#4b4140' },\n  { name: 'Open Contracting', color: '#076775' }\n];\n\nconst sectorLabelColorGenerator = (sectorName) => {\n  return sectors.find((sector) => sector.name === sectorName)?.color;\n};\n\nconst ImageItem = ({ url, image, text, sectorName, boldText }) => {\n  return (\n    <ImageItemContainer boldtext={boldText.toString()} to={url || '/'}>\n      {sectorName ? <SectorLabel color={sectorLabelColorGenerator(sectorName)}>{sectorName}</SectorLabel> : null}\n      {image ? <Image fluid={image} /> : <div />} <p>{text}</p>\n    </ImageItemContainer>\n  );\n};\n\nexport default ImageItem;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Image from 'gatsby-image';\nimport { FaTwitter, FaLinkedinIn, FaGithubAlt, FaYoutube, FaFacebook } from 'react-icons/fa';\n// import Carousel from 'react-multi-carousel';\n// import 'react-multi-carousel/lib/styles.css';\nimport Layout from '../components/Layout/Layout';\nimport HeroText from '../styles/HeroText';\nimport { TitleContainer } from '../pages/work';\nimport MiniTeamSection from '../components/MiniTeamSection';\nimport Seo from '../components/Seo/Seo';\n// import Timeline from '../components/Timeline';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport MainContainer from '../styles/MainContainer';\nimport StandardGrid from '../styles/StandardGrid';\nimport Resources from '../components/Resources';\nimport MarkdownView from 'react-showdown';\n\nconst ProjectTitleContainer = styled(TitleContainer)`\n  @media (min-width: 1280px) {\n    h1 {\n      overflow-wrap: break-word;\n      font-size: 45px;\n      line-height: 1em;\n      width: 380px;\n    }\n  }\n\n  @media (min-width: 1920px) {\n    h1 {\n      font-size: 45px;\n      font-weight: 1em;\n      min-width: 350px;\n    }\n  }\n`;\n\nconst ProjectContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0 16px;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 5/13;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1920px) {\n    grid-column: 4/13;\n  }\n`;\n\nconst ImageSection = styled.div`\n  position: relative;\n\n  .gatsby-image-wrapper {\n    max-height: 400px;\n  }\n\n  @media (min-width: 1280px) {\n    .gatsby-image-wrapper {\n      max-height: 750px;\n    }\n  }\n`;\n\nconst SummaryText = styled.div`\n  font-weight: 500;\n  font-size: 1.5rem;\n  margin-top: 24px;\n\n  @media (min-width: 1280px) {\n    font-size: 2rem;\n  }\n`;\n\nconst ProjectText = styled.div`\n  padding: 0;\n  margin-bottom: 32px;\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  > p {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  > div p {\n    margin-top: 8px;\n  }\n\n  @media (min-width: 1024px) {\n    padding: 0;\n    margin: 40px 0;\n  }\n\n  @media (min-width: 1440px) {\n    width: 50%;\n\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst LeftText = styled.div`\n  margin: 30px 0;\n  padding: ${(props) => (props.mobile ? '0 32px' : '0')};\n  display: ${(props) => (props.mobile ? 'block' : 'none')};\n  text-align: ${(props) => (props.mobile ? 'center' : 'left')};\n\n  a {\n    display: inline-block;\n    color: #05b7be;\n    text-decoration: none;\n    margin-top: 4px;\n  }\n\n  p {\n    line-height: 1.5em;\n    font-size: 18px;\n  }\n\n  p:first-of-type {\n    font-weight: 700;\n    margin-bottom: 0;\n  }\n\n  p:last-of-type {\n    margin-top: 8px;\n  }\n\n  .btn-newsletter {\n    margin-top: 12px;\n    padding: 12px 18px;\n    background-color: #1dcccc;\n    color: black;\n    font-weight: 500;\n    border-radius: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    display: ${(props) => (props.mobile ? 'none' : 'block')};\n    padding: 0;\n    margin: 36px 0;\n\n    a {\n      max-width: 250px;\n      word-wrap: break-word;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    p {\n      font-size: 20px;\n    }\n  }\n`;\n\nconst SocialLinksContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  justify-content: ${(props) => (props.mobile ? 'center' : 'start')};\n\n  a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    background-color: black;\n    width: 45px;\n    height: 45px;\n    border-radius: 100%;\n    color: white;\n    margin-right: 12px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-top: 10px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst PartnersContainer = styled.div`\n  a {\n    display: block;\n    margin-top: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    margin-bottom: 60px;\n  }\n`;\n\n// const StyledCarousel = styled(Carousel)`\n//   li > div {\n//     max-height: 300px;\n//   }\n\n//   @media (min-width: 1024px) {\n//     li > div {\n//       max-height: 600px;\n//       margin-left: 4px;\n//       margin-right: 4px;\n//     }\n//   }\n// `;\n\n// const responsive = {\n//   superLargeDesktop: {\n//     breakpoint: { max: 4000, min: 3000 },\n//     items: 5\n//   },\n//   desktop: {\n//     breakpoint: { max: 3000, min: 1024 },\n//     items: 3\n//   },\n//   tablet: {\n//     breakpoint: { max: 1024, min: 464 },\n//     items: 2\n//   },\n//   mobile: {\n//     breakpoint: { max: 464, min: 0 },\n//     items: 1\n//   }\n// };\n\nconst ProjectTemplate = ({ data }) => {\n  const project = data.markdownRemark;\n  const members = data.members.nodes;\n  const partners = data.partners.nodes;\n\n  const {\n    twitter,\n    linkedin,\n    github,\n    youtube,\n    facebook,\n    url,\n    solution,\n    aim,\n    resources,\n    newsletter\n  } = project.frontmatter;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef, 750);\n\n  return (\n    <Layout>\n      <Seo title={project.frontmatter.name} />\n      <MainContainer>\n        <StandardGrid>\n          <ProjectTitleContainer ref={leftContainerRef}>\n            <HeroText>{project.frontmatter.name}</HeroText>\n\n            <LeftText>\n              {url && (\n                <>\n                  <p>Check our work here:</p>\n                  <a target=\"_blank\" rel=\"noreferrer noopener\" href={url}>\n                    {url}\n                  </a>\n                </>\n              )}\n              <SocialLinksContainer>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n\n            {newsletter && (\n              <LeftText>\n                <p>Subscribe to our newsletter:</p>\n                <a className=\"btn-newsletter\" href={newsletter}>\n                  Subscribe\n                </a>\n              </LeftText>\n            )}\n\n            {partners.length ? (\n              <LeftText>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            ) : null}\n          </ProjectTitleContainer>\n          <ProjectContent ref={rightContainerRef}>\n            <ImageSection>\n              <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n              <SummaryText>{project.frontmatter.summary}</SummaryText>\n            </ImageSection>\n            <ProjectText>\n              <p>Context:</p>\n              {project.frontmatter.context ? (\n                <MarkdownView markdown={project.frontmatter.context} />\n              ) : (\n                <div dangerouslySetInnerHTML={{ __html: project.html }} />\n              )}\n            </ProjectText>\n            {aim && (\n              <ProjectText>\n                <p>Aim:</p>\n                <MarkdownView markdown={aim} />\n              </ProjectText>\n            )}\n            {solution && (\n              <ProjectText>\n                <p>Our solution:</p>\n                <MarkdownView markdown={solution} />\n              </ProjectText>\n            )}\n\n            <LeftText mobile>\n              <p>Check our work here:</p>\n              <a target=\"_blank\" rel=\"noreferrer noopener\" href={`https://${url}`}>\n                {url}\n              </a>\n              <SocialLinksContainer mobile>\n                {twitter && (\n                  <a href={twitter} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaTwitter />\n                  </a>\n                )}\n                {linkedin && (\n                  <a href={linkedin} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaLinkedinIn />\n                  </a>\n                )}\n                {facebook && (\n                  <a href={facebook} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaFacebook />\n                  </a>\n                )}\n                {github && (\n                  <a href={github} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaGithubAlt />\n                  </a>\n                )}\n                {youtube && (\n                  <a href={youtube} target=\"_blank\" rel=\"noreferrer noopener\">\n                    <FaYoutube />\n                  </a>\n                )}\n              </SocialLinksContainer>\n            </LeftText>\n            {partners && (\n              <LeftText mobile>\n                <p>In partnership with:</p>\n                <PartnersContainer>\n                  {partners.map((partner) => (\n                    <a key={partner.id} href={partner.frontmatter.website} target=\"_blank\" rel=\"noreferrer noopener\">\n                      <Image fixed={partner.frontmatter.logo.childImageSharp.fixed} />\n                    </a>\n                  ))}\n                </PartnersContainer>\n              </LeftText>\n            )}\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n      {/* {project.frontmatter.timeline && <Timeline timelineItems={project.frontmatter.timeline} />} */}\n      {/* <StyledCarousel responsive={responsive}>\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n        <Image fluid={project.frontmatter.image.childImageSharp.fluid} />\n      </StyledCarousel> */}\n      <MainContainer>\n        <StandardGrid>\n          <ProjectContent>\n            <MiniTeamSection members={members} />\n            {resources && <Resources resources={resources} />}\n          </ProjectContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n  query ProjectQuery($id: String!, $nameRegex: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        name\n        summary\n        context\n        aim\n        solution\n        url\n        github\n        twitter\n        linkedin\n        youtube\n        facebook\n        newsletter\n        resources {\n          link\n          title\n          type\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1200, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    members: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    partners: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/projectpart/\" }, frontmatter: { projects: { regex: $nameRegex } } }\n      sort: { fields: frontmatter___name }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          name\n          website\n          logo {\n            childImageSharp {\n              fixed(width: 110) {\n                ...GatsbyImageSharpFixed_noBase64\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/Layout';\nimport SectorNav from '../components/SectorNav';\nimport MainContainer from '../styles/MainContainer';\nimport HeroText from '../styles/HeroText';\nimport ImageItem from '../components/ImageItem';\nimport Seo from '../components/Seo/Seo';\nimport useFixedScroll from '../hooks/useFixedScroll';\nimport StandardGrid from '../styles/StandardGrid';\nimport { SocialLinks } from '../components/Contact';\n\nexport const TitleContainer = styled.div`\n  padding: 0;\n  font-size: 16px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n\n  h1,\n  h3 {\n    text-align: left;\n    margin-bottom: 16px;\n    padding-bottom: 16px;\n    border-bottom: 10px solid black;\n  }\n\n  @media (min-width: 1024px) {\n    h1 {\n      border-bottom: none;\n      margin-top: 16px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 1/4;\n    padding-left: 0;\n    padding-right: 0;\n\n    h1 {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const ProjectsContent = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 1024px) {\n    padding: 0;\n  }\n\n  @media (min-width: 1280px) {\n    grid-column: 4/13;\n  }\n`;\n\nexport const ProjectsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n  margin-top: 16px;\n  padding: 0;\n\n  @media (min-width: 1024px) {\n    grid-gap: 24px;\n    grid-template-columns: 1fr 1fr;\n    margin-top: 20px;\n    margin-bottom: 150px;\n  }\n\n  @media (min-width: 2000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`;\n\n// add social links below our link\n\n// const PartnersContainer = styled.div``;\n\nconst Sectors = ({ data }) => {\n  const projects = data.allMarkdownRemark.nodes;\n\n  const leftContainerRef = React.useRef(null);\n  const rightContainerRef = React.useRef(null);\n\n  useFixedScroll(leftContainerRef, rightContainerRef);\n\n  return (\n    <Layout>\n      <Seo title=\"Our Work\" />\n      <MainContainer>\n        <StandardGrid>\n          <TitleContainer ref={leftContainerRef}>\n            <HeroText>Our Work</HeroText>\n            <SocialLinks />\n          </TitleContainer>\n          <ProjectsContent ref={rightContainerRef}>\n            <SectorNav />\n            <ProjectsContainer>\n              {projects.map((project) => (\n                <ImageItem\n                  key={project.id}\n                  url={project.fields.slug}\n                  image={project.frontmatter.image.childImageSharp.fluid}\n                  text={project.frontmatter.name}\n                  sectorName={project.frontmatter.sector}\n                  boldText\n                />\n              ))}\n            </ProjectsContainer>\n          </ProjectsContent>\n        </StandardGrid>\n      </MainContainer>\n    </Layout>\n  );\n};\n\nexport default Sectors;\n\nexport const pageQuery = graphql`\n  query ProjectsQuery {\n    allMarkdownRemark(filter: { frontmatter: { type: { eq: \"project\" } } }, sort: { fields: frontmatter___name }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          name\n          sector\n          image {\n            childImageSharp {\n              fluid(maxWidth: 800, quality: 100) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, useStaticQuery, graphql } from 'gatsby';\n\nconst SectorNavItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-shrink: 0;\n  box-sizing: border-box;\n  padding: 8px 20px;\n  border: 3px solid black;\n  text-decoration: none;\n  color: black;\n  background-color: white;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 45px;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 16px;\n    padding: 8px 16px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-right: 12px;\n    padding: 8px 20px;\n  }\n\n  @media (min-width: 1600px) {\n    font-size: 20px;\n    padding: 6px 24px;\n    margin-right: 24px;\n  }\n`;\n\nconst SectorNavContainer = styled.div`\n  display: flex;\n  overflow-x: scroll;\n  align-items: center;\n  padding-left: 0;\n  margin: 16px 0;\n  max-width: 1200px;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  .active-sector {\n    color: white;\n    background-color: black;\n  }\n\n  @media (min-width: 1280px) {\n    padding-left: 0;\n  }\n\n  @media (min-width: 1600px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst SectorNav = () => {\n  const data = useStaticQuery(graphql`\n    query MyQuery {\n      allMarkdownRemark(filter: { frontmatter: { type: { eq: \"sector\" } } }, sort: { fields: frontmatter___name }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              name\n            }\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectorsData = data.allMarkdownRemark.edges;\n\n  return (\n    <SectorNavContainer>\n      <SectorNavItem activeClassName=\"active-sector\" to=\"/work\">\n        All\n      </SectorNavItem>\n      {sectorsData.map((sector) => (\n        <SectorNavItem activeClassName=\"active-sector\" key={sector.node.id} to={sector.node.fields.slug}>\n          {sector.node.frontmatter.name === 'Digital Public Goods' ? 'DPG' : sector.node.frontmatter.name}\n        </SectorNavItem>\n      ))}\n    </SectorNavContainer>\n  );\n};\n\nexport default SectorNav;\n"],"sourceRoot":""}